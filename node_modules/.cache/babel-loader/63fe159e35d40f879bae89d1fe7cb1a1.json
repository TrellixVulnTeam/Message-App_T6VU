{"ast":null,"code":"var _jsxFileName = \"/home/mark/workmine/Message-App/src/components/sign-in/sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../../components/button/button\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { withRouter } from \"react-router\";\nimport firebase from \"@firebase/app-compat\";\nimport \"./sign-in.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(email, password).then(userCredential => {\n      const userRef = firestore.doc(`users/${userCredential.user.uid}`);\n      userRef.update({\n        isOnline: true\n      }).then(() => {\n        console.log(\"Document successfully updated!\");\n        history.push(\"/\");\n      });\n    }).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    }); // try {\n    //   const userAuth = await auth.signInWithEmailAndPassword(email, password);\n    //   const userRef = firestore.doc(`users/${userAuth.user.uid}`);\n    //   await userRef.update({\n    //     isOnline: true,\n    //   });\n    //   setUserCredentials({ email: \"\", password: \"\" });\n    //   history.push(\"/\");\n    // } catch (error) {\n    //   console.log(\"sign in error\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"sign-in-form\",\n    onSubmit: handleSubmit,\n    autocomplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sign-in-input\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sign-in-input\",\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      size: \"small\",\n      children: \"SIGN IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"epF3oqhh4a1qu6x+o/kTD3uR/Kg=\");\n\n_c = SignIn;\nexport default _c2 = withRouter(SignIn);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/mark/workmine/Message-App/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","Button","auth","createUserProfileDocument","firestore","withRouter","firebase","SignIn","history","userCredentials","setUserCredentials","email","password","handleChange","event","value","name","target","handleSubmit","preventDefault","signInWithEmailAndPassword","then","userCredential","userRef","doc","user","uid","update","isOnline","console","log","push","catch","error","errorCode","code","errorMessage","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../../components/button/button\";\n\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { withRouter } from \"react-router\";\n\nimport firebase from \"@firebase/app-compat\";\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = ({ history }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        const userRef = firestore.doc(`users/${userCredential.user.uid}`);\n        userRef\n          .update({\n            isOnline: true,\n          })\n          .then(() => {\n            console.log(\"Document successfully updated!\");\n            history.push(\"/\");\n          });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n      });\n\n    // try {\n    //   const userAuth = await auth.signInWithEmailAndPassword(email, password);\n    //   const userRef = firestore.doc(`users/${userAuth.user.uid}`);\n    //   await userRef.update({\n    //     isOnline: true,\n    //   });\n    //   setUserCredentials({ email: \"\", password: \"\" });\n\n    //   history.push(\"/\");\n    // } catch (error) {\n    //   console.log(\"sign in error\");\n  };\n\n  return (\n    <form className=\"sign-in-form\" onSubmit={handleSubmit} autocomplete=\"off\">\n      <div>\n        <input\n          className=\"sign-in-input\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          placeholder=\"Email\"\n          required\n        />\n      </div>\n\n      <div>\n        <input\n          className=\"sign-in-input\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          placeholder=\"Password\"\n          required\n        />\n      </div>\n\n      <Button type=\"submit\" size=\"small\">\n        SIGN IN\n      </Button>\n    </form>\n  );\n};\n\nexport default withRouter(SignIn);\n"]},"metadata":{},"sourceType":"module"}