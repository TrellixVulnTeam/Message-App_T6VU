{"ast":null,"code":"import React from 'react';\n/**\n * Helper hook for using controlled/uncontrolled values from a component props.\n *\n * When the value is not controlled, pass `undefined` as `controlledValue` and\n * use the returned setter to update it.\n *\n * When the value is controlled, pass the controlled value as second\n * argument, which will be always returned as `value`.\n */\n\nexport function useControlledValue(defaultValue, controlledValue) {\n  var _a = React.useState(defaultValue),\n      uncontrolledValue = _a[0],\n      setValue = _a[1];\n\n  var value = controlledValue === undefined ? uncontrolledValue : controlledValue;\n  return [value, setValue];\n}","map":{"version":3,"sources":["../../../src/hooks/useControlledValue/useControlledValue.ts"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AAIA;;;;;;;;AAQG;;AACH,OAAM,SAAU,kBAAV,CACJ,YADI,EAEJ,eAFI,EAE0B;AAExB,MAAA,EAAA,GAAgC,KAAK,CAAC,QAAN,CAAe,YAAf,CAAhC;AAAA,MAAC,iBAAiB,GAAA,EAAA,CAAA,CAAA,CAAlB;AAAA,MAAoB,QAAQ,GAAA,EAAA,CAAA,CAAA,CAA5B;;AAEN,MAAM,KAAK,GACT,eAAe,KAAK,SAApB,GAAgC,iBAAhC,GAAoD,eADtD;AAGA,SAAO,CAAC,KAAD,EAAQ,QAAR,CAAP;AACD","sourcesContent":["import React from 'react';\n/**\n * Helper hook for using controlled/uncontrolled values from a component props.\n *\n * When the value is not controlled, pass `undefined` as `controlledValue` and\n * use the returned setter to update it.\n *\n * When the value is controlled, pass the controlled value as second\n * argument, which will be always returned as `value`.\n */\nexport function useControlledValue(defaultValue, controlledValue) {\n    var _a = React.useState(defaultValue), uncontrolledValue = _a[0], setValue = _a[1];\n    var value = controlledValue === undefined ? uncontrolledValue : controlledValue;\n    return [value, setValue];\n}\n"]},"metadata":{},"sourceType":"module"}