{"ast":null,"code":"import React from 'react';\nimport { isDayPickerSingle } from '../../types/DayPickerSingle';\n/**\n * The SelectSingle context shares details about the selected days when in\n * single selection mode.\n *\n * Access this context from the [[useSelectSingle]] hook.\n */\n\nexport var SelectSingleContext = React.createContext(undefined);\n/** Provides the values for the [[SelectSingleProvider]]. */\n\nexport function SelectSingleProvider(props) {\n  if (!isDayPickerSingle(props.initialProps)) {\n    var emptyContextValue = {\n      selected: undefined\n    };\n    return React.createElement(SelectSingleContext.Provider, {\n      value: emptyContextValue\n    }, props.children);\n  }\n\n  return React.createElement(SelectSingleProviderInternal, {\n    initialProps: props.initialProps,\n    children: props.children\n  });\n}\nexport function SelectSingleProviderInternal(_a) {\n  var initialProps = _a.initialProps,\n      children = _a.children;\n\n  var onDayClick = function (day, dayModifiers, e) {\n    var _a, _b;\n\n    if (dayModifiers.selected && !initialProps.required) {\n      (_a = initialProps.onSelect) === null || _a === void 0 ? void 0 : _a.call(initialProps, undefined, day, dayModifiers, e);\n      return;\n    }\n\n    (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, day, day, dayModifiers, e);\n  };\n\n  var contextValue = {\n    selected: initialProps.selected,\n    onDayClick: onDayClick\n  };\n  return React.createElement(SelectSingleContext.Provider, {\n    value: contextValue\n  }, children);\n}","map":{"version":3,"sources":["../../../src/contexts/SelectSingle/SelectSingleContext.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AAGA,SAA+B,iBAA/B,QAAwD,6BAAxD;AAWA;;;;;AAKG;;AACH,OAAO,IAAM,mBAAmB,GAAG,KAAK,CAAC,aAAN,CAEjC,SAFiC,CAA5B;AASP;;AACA,OAAM,SAAU,oBAAV,CACJ,KADI,EAC4B;AAEhC,MAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAP,CAAtB,EAA4C;AAC1C,QAAM,iBAAiB,GAA6B;AAClD,MAAA,QAAQ,EAAE;AADwC,KAApD;AAGA,WACE,KAAA,CAAA,aAAA,CAAC,mBAAmB,CAAC,QAArB,EAA6B;AAAC,MAAA,KAAK,EAAE;AAAR,KAA7B,EACG,KAAK,CAAC,QADT,CADF;AAKD;;AACD,SACE,KAAA,CAAA,aAAA,CAAC,4BAAD,EAA6B;AAC3B,IAAA,YAAY,EAAE,KAAK,CAAC,YADO;AAE3B,IAAA,QAAQ,EAAE,KAAK,CAAC;AAFW,GAA7B,CADF;AAMD;AAOD,OAAM,SAAU,4BAAV,CAAuC,EAAvC,EAGyB;MAF7B,YAAY,GAAA,EAAA,CAAA,Y;MACZ,QAAQ,GAAA,EAAA,CAAA,Q;;AAER,MAAM,UAAU,GAAyB,UAAC,GAAD,EAAM,YAAN,EAAoB,CAApB,EAAqB;;;AAC5D,QAAI,YAAY,CAAC,QAAb,IAAyB,CAAC,YAAY,CAAC,QAA3C,EAAqD;AACnD,OAAA,EAAA,GAAA,YAAY,CAAC,QAAb,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAA,IAAA,CAArB,YAAqB,EAAG,SAAH,EAAc,GAAd,EAAmB,YAAnB,EAAiC,CAAjC,CAArB;AACA;AACD;;AACD,KAAA,EAAA,GAAA,YAAY,CAAC,QAAb,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAA,IAAA,CAArB,YAAqB,EAAG,GAAH,EAAQ,GAAR,EAAa,YAAb,EAA2B,CAA3B,CAArB;AACD,GAND;;AAQA,MAAM,YAAY,GAA6B;AAC7C,IAAA,QAAQ,EAAE,YAAY,CAAC,QADsB;AAE7C,IAAA,UAAU,EAAA;AAFmC,GAA/C;AAIA,SACE,KAAA,CAAA,aAAA,CAAC,mBAAmB,CAAC,QAArB,EAA6B;AAAC,IAAA,KAAK,EAAE;AAAR,GAA7B,EACG,QADH,CADF;AAKD","sourcesContent":["import React from 'react';\nimport { isDayPickerSingle } from '../../types/DayPickerSingle';\n/**\n * The SelectSingle context shares details about the selected days when in\n * single selection mode.\n *\n * Access this context from the [[useSelectSingle]] hook.\n */\nexport var SelectSingleContext = React.createContext(undefined);\n/** Provides the values for the [[SelectSingleProvider]]. */\nexport function SelectSingleProvider(props) {\n    if (!isDayPickerSingle(props.initialProps)) {\n        var emptyContextValue = {\n            selected: undefined\n        };\n        return (React.createElement(SelectSingleContext.Provider, { value: emptyContextValue }, props.children));\n    }\n    return (React.createElement(SelectSingleProviderInternal, { initialProps: props.initialProps, children: props.children }));\n}\nexport function SelectSingleProviderInternal(_a) {\n    var initialProps = _a.initialProps, children = _a.children;\n    var onDayClick = function (day, dayModifiers, e) {\n        var _a, _b;\n        if (dayModifiers.selected && !initialProps.required) {\n            (_a = initialProps.onSelect) === null || _a === void 0 ? void 0 : _a.call(initialProps, undefined, day, dayModifiers, e);\n            return;\n        }\n        (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, day, day, dayModifiers, e);\n    };\n    var contextValue = {\n        selected: initialProps.selected,\n        onDayClick: onDayClick\n    };\n    return (React.createElement(SelectSingleContext.Provider, { value: contextValue }, children));\n}\n"]},"metadata":{},"sourceType":"module"}