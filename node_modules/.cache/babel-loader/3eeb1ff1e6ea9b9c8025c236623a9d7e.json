{"ast":null,"code":"/** Returns true if `matcher` is of type [[DateInterval]]. */\nexport function isDateInterval(matcher) {\n  return Boolean(matcher && typeof matcher === 'object' && 'before' in matcher && 'after' in matcher);\n}\n/** Returns true if `value` is a [[DateRange]] type. */\n\nexport function isDateRange(value) {\n  // TODO: Check if dates?!\n  return Boolean(value && typeof value === 'object' && 'from' in value);\n}\n/** Returns true if `value` is of type [[DateAfter]]. */\n\nexport function isDateAfterType(value) {\n  return Boolean(value && typeof value === 'object' && 'after' in value);\n}\n/** Returns true if `value` is of type [[DateBefore]]. */\n\nexport function isDateBeforeType(value) {\n  return Boolean(value && typeof value === 'object' && 'before' in value);\n}\n/** Returns true if `value` is a [[DayOfWeek]] type. */\n\nexport function isDayOfWeekType(value) {\n  return Boolean(value && typeof value === 'object' && 'dayOfWeek' in value);\n}","map":{"version":3,"sources":["../../src/types/Matchers.ts"],"names":[],"mappings":"AA0BA;AACA,OAAM,SAAU,cAAV,CAAyB,OAAzB,EAAyC;AAC7C,SAAO,OAAO,CACZ,OAAO,IACL,OAAO,OAAP,KAAmB,QADrB,IAEE,YAAY,OAFd,IAGE,WAAW,OAJD,CAAd;AAMD;AAED;;AACA,OAAM,SAAU,WAAV,CAAsB,KAAtB,EAAoC;AACxC;AACA,SAAO,OAAO,CAAC,KAAK,IAAI,OAAO,KAAP,KAAiB,QAA1B,IAAsC,UAAU,KAAjD,CAAd;AACD;AAED;;AACA,OAAM,SAAU,eAAV,CAA0B,KAA1B,EAAwC;AAC5C,SAAO,OAAO,CAAC,KAAK,IAAI,OAAO,KAAP,KAAiB,QAA1B,IAAsC,WAAW,KAAlD,CAAd;AACD;AAED;;AACA,OAAM,SAAU,gBAAV,CAA2B,KAA3B,EAAyC;AAC7C,SAAO,OAAO,CAAC,KAAK,IAAI,OAAO,KAAP,KAAiB,QAA1B,IAAsC,YAAY,KAAnD,CAAd;AACD;AAED;;AACA,OAAM,SAAU,eAAV,CAA0B,KAA1B,EAAwC;AAC5C,SAAO,OAAO,CAAC,KAAK,IAAI,OAAO,KAAP,KAAiB,QAA1B,IAAsC,eAAe,KAAtD,CAAd;AACD","sourcesContent":["/** Returns true if `matcher` is of type [[DateInterval]]. */\nexport function isDateInterval(matcher) {\n    return Boolean(matcher &&\n        typeof matcher === 'object' &&\n        'before' in matcher &&\n        'after' in matcher);\n}\n/** Returns true if `value` is a [[DateRange]] type. */\nexport function isDateRange(value) {\n    // TODO: Check if dates?!\n    return Boolean(value && typeof value === 'object' && 'from' in value);\n}\n/** Returns true if `value` is of type [[DateAfter]]. */\nexport function isDateAfterType(value) {\n    return Boolean(value && typeof value === 'object' && 'after' in value);\n}\n/** Returns true if `value` is of type [[DateBefore]]. */\nexport function isDateBeforeType(value) {\n    return Boolean(value && typeof value === 'object' && 'before' in value);\n}\n/** Returns true if `value` is a [[DayOfWeek]] type. */\nexport function isDayOfWeekType(value) {\n    return Boolean(value && typeof value === 'object' && 'dayOfWeek' in value);\n}\n"]},"metadata":{},"sourceType":"module"}