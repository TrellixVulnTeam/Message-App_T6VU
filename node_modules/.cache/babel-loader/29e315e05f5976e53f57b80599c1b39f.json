{"ast":null,"code":"var _jsxFileName = \"/home/mark/workmine/Message-App/src/components/user-items/user-item.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"../avatar/avatar.component\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { setSelectedUser } from \"../../redux/user/user.actions\";\nimport { setMessageChatted } from \"../../redux/messages/messages.action\";\nimport \"./user-item.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserItem = _ref => {\n  let {\n    user,\n    setSelectedUser,\n    currentUser,\n    setMessageChatted\n  } = _ref;\n  const {\n    displayName,\n    isOnline,\n    avatarSrc\n  } = user;\n  console.log(\"currentUser\", currentUser);\n\n  const onSelectedUser = () => {\n    setSelectedUser(user);\n    if (!currentUser || !user) return;\n    firestore.collection(\"messages\").where(\"user1\", \"in\", [currentUser.id, user.id]).onSnapshot(querySnapshot => {\n      var allMessages = [];\n      querySnapshot.forEach(doc => {\n        if (doc.data().user1 === currentUser.id && doc.data().user2 === user.id || doc.data().user1 === user.id && doc.data().user2 === user.currentUser.id) {\n          allMessages.push(doc.data());\n        }\n      });\n      console.log(\"Current cities in CA: \", allMessages);\n      setMessageChatted(allMessages);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onSelectedUser,\n    className: `chatlist__item ${isOnline ? isOnline : \"\"} `,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${isOnline ? \"active\" : \"off\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userMeta\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          source: avatarSrc,\n          isOnline: isOnline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UserItem;\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedUser: user => dispatch(setSelectedUser(user)),\n  setMessageChatted: messageChatted => dispatch(setMessageChatted(messageChatted))\n});\n\nconst mapStateToProps = _ref2 => {\n  let {\n    user: {\n      currentUser\n    }\n  } = _ref2;\n  return {\n    currentUser\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserItem\");","map":{"version":3,"sources":["/home/mark/workmine/Message-App/src/components/user-items/user-item.component.jsx"],"names":["React","Component","connect","Avatar","firestore","setSelectedUser","setMessageChatted","UserItem","user","currentUser","displayName","isOnline","avatarSrc","console","log","onSelectedUser","collection","where","id","onSnapshot","querySnapshot","allMessages","forEach","doc","data","user1","user2","push","mapDispatchToProps","dispatch","messageChatted","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Avatar from \"../avatar/avatar.component\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { setSelectedUser } from \"../../redux/user/user.actions\";\nimport { setMessageChatted } from \"../../redux/messages/messages.action\";\n\nimport \"./user-item.styles.scss\";\n\nconst UserItem = ({\n  user,\n  setSelectedUser,\n  currentUser,\n  setMessageChatted,\n}) => {\n  const { displayName, isOnline, avatarSrc } = user;\n  console.log(\"currentUser\", currentUser);\n\n  const onSelectedUser = () => {\n    setSelectedUser(user);\n    if (!currentUser || !user) return;\n    firestore\n      .collection(\"messages\")\n      .where(\"user1\", \"in\", [currentUser.id, user.id])\n      .onSnapshot((querySnapshot) => {\n        var allMessages = [];\n        querySnapshot.forEach((doc) => {\n          if (\n            (doc.data().user1 === currentUser.id &&\n              doc.data().user2 === user.id) ||\n            (doc.data().user1 === user.id &&\n              doc.data().user2 === user.currentUser.id)\n          ) {\n            allMessages.push(doc.data());\n          }\n        });\n        console.log(\"Current cities in CA: \", allMessages);\n        setMessageChatted(allMessages);\n      });\n  };\n\n  return (\n    <div\n      onClick={onSelectedUser}\n      className={`chatlist__item ${isOnline ? isOnline : \"\"} `}\n    >\n      <div className=\"item-flex\">\n        <span className={`${isOnline ? \"active\" : \"off\"}`}></span>\n        <div className=\"userMeta\">\n          <Avatar source={avatarSrc} isOnline={isOnline} />\n          <p>{displayName}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelectedUser: (user) => dispatch(setSelectedUser(user)),\n  setMessageChatted: (messageChatted) =>\n    dispatch(setMessageChatted(messageChatted)),\n});\n\nconst mapStateToProps = ({ user: { currentUser } }) => ({\n  currentUser,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserItem);\n"]},"metadata":{},"sourceType":"module"}