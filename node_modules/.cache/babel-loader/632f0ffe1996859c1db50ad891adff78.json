{"ast":null,"code":"var _jsxFileName = \"/home/mark/workmine/Message-App/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\"; // import CustomButton from \"../custom-button/custom-button.component\";\n// import { signUpStart } from \"../../redux/user/user.actions\";\n\nimport \"./sign-up.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  let {\n    signUpStart\n  } = _ref;\n\n  // const [userCredentials, setUserCredentials] = useState({\n  //   displayName: \"\",\n  //   email: \"\",\n  //   password: \"\",\n  //   confirmPassword: \"\",\n  // });\n  // const { displayName, email, password, confirmPassword } = userCredentials;\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n  //   if (password !== confirmPassword) {\n  //     alert(\"passwords don't match\");\n  //     return;\n  //   }\n  //   signUpStart({ displayName, email, password });\n  // };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}; // const mapDispatchToProps = (dispatch) => ({\n//   signUpStart: (userCredential) => dispatch(signUpStart(userCredential)),\n// });\n// export default connect(null, mapDispatchToProps)(SignUp);\n\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/mark/workmine/Message-App/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","SignUp","signUpStart","handleChange","event","name","value","target","setUserCredentials","userCredentials","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,oCAAtB,C,CAEA;AAEA;;AAEA,OAAO,uBAAP;;;AAEA,MAAMC,MAAM,GAAG,QAAqB;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;;AAClC;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAC,IAAAA,kBAAkB,CAAC,EAAE,GAAGC,eAAL;AAAsB,OAACJ,IAAD,GAAQC;AAA9B,KAAD,CAAlB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAEI;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CArED,C,CAuEA;AACA;AACA;AAEA;;;KA3EMT,M;AA6EN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\n\n// import CustomButton from \"../custom-button/custom-button.component\";\n\n// import { signUpStart } from \"../../redux/user/user.actions\";\n\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({ signUpStart }) => {\n  // const [userCredentials, setUserCredentials] = useState({\n  //   displayName: \"\",\n  //   email: \"\",\n  //   password: \"\",\n  //   confirmPassword: \"\",\n  // });\n\n  // const { displayName, email, password, confirmPassword } = userCredentials;\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n  //   if (password !== confirmPassword) {\n  //     alert(\"passwords don't match\");\n  //     return;\n  //   }\n\n  //   signUpStart({ displayName, email, password });\n  // };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I do not have a account</h2>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        {/* <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton> */}\n      </form>\n    </div>\n  );\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   signUpStart: (userCredential) => dispatch(signUpStart(userCredential)),\n// });\n\n// export default connect(null, mapDispatchToProps)(SignUp);\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}