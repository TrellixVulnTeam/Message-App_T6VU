{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React from 'react';\nimport { useDayPicker } from '../../contexts/DayPicker';\n/**\n * Render a button HTML element applying the reset class name.\n */\n\nexport var Button = React.forwardRef(function (props, ref) {\n  var _a = useDayPicker(),\n      classNames = _a.classNames,\n      styles = _a.styles;\n\n  var classNamesArr = [classNames.button_reset, classNames.button];\n\n  if (props.className) {\n    classNamesArr.push(props.className);\n  }\n\n  var className = classNamesArr.join(' ');\n\n  var style = __assign(__assign({}, styles.button_reset), styles.button);\n\n  if (props.style) {\n    Object.assign(style, props.style);\n  }\n\n  return React.createElement(\"button\", __assign({}, props, {\n    ref: ref,\n    type: \"button\",\n    className: className,\n    style: style\n  }));\n});","map":{"version":3,"sources":["../../../src/components/Button/Button.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,QAA6B,0BAA7B;AAKA;;AAEG;;AACH,OAAO,IAAM,MAAM,GAAG,KAAK,CAAC,UAAN,CACpB,UAAC,KAAD,EAAQ,GAAR,EAAW;AACH,MAAA,EAAA,GAAyB,YAAY,EAArC;AAAA,MAAE,UAAU,GAAA,EAAA,CAAA,UAAZ;AAAA,MAAc,MAAM,GAAA,EAAA,CAAA,MAApB;;AAEN,MAAM,aAAa,GAAG,CAAC,UAAU,CAAC,YAAZ,EAA0B,UAAU,CAAC,MAArC,CAAtB;;AACA,MAAI,KAAK,CAAC,SAAV,EAAqB;AACnB,IAAA,aAAa,CAAC,IAAd,CAAmB,KAAK,CAAC,SAAzB;AACD;;AACD,MAAM,SAAS,GAAG,aAAa,CAAC,IAAd,CAAmB,GAAnB,CAAlB;;AAEA,MAAM,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,MAAM,CAAC,YAAf,CAAA,EAAgC,MAAM,CAAC,MAAvC,CAAX;;AACA,MAAI,KAAK,CAAC,KAAV,EAAiB;AACf,IAAA,MAAM,CAAC,MAAP,CAAc,KAAd,EAAqB,KAAK,CAAC,KAA3B;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,GAAG,EAAE,GADI;AAET,IAAA,IAAI,EAAC,QAFI;AAGT,IAAA,SAAS,EAAE,SAHF;AAIT,IAAA,KAAK,EAAE;AAJE,GADX,CAAA,CADF;AASD,CAxBmB,CAAf","sourcesContent":["import { __assign } from \"tslib\";\nimport React from 'react';\nimport { useDayPicker } from '../../contexts/DayPicker';\n/**\n * Render a button HTML element applying the reset class name.\n */\nexport var Button = React.forwardRef(function (props, ref) {\n    var _a = useDayPicker(), classNames = _a.classNames, styles = _a.styles;\n    var classNamesArr = [classNames.button_reset, classNames.button];\n    if (props.className) {\n        classNamesArr.push(props.className);\n    }\n    var className = classNamesArr.join(' ');\n    var style = __assign(__assign({}, styles.button_reset), styles.button);\n    if (props.style) {\n        Object.assign(style, props.style);\n    }\n    return (React.createElement(\"button\", __assign({}, props, { ref: ref, type: \"button\", className: className, style: style })));\n});\n"]},"metadata":{},"sourceType":"module"}