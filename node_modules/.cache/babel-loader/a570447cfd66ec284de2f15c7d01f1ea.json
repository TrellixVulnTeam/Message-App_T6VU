{"ast":null,"code":"var _jsxFileName = \"/home/mark/workmine/Message-App/src/components/chatting-content/chatting-content.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./chatting-content.scss\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChattingContent = _ref => {\n  _s();\n\n  let {\n    selectedUser,\n    currentUser\n  } = _ref;\n  useEffect(() => {\n    firestore.collection(\"cities\").where(\"state\", \"==\", \"CA\").onSnapshot(querySnapshot => {\n      var cities = [];\n      querySnapshot.forEach(doc => {\n        cities.push(doc.data().name);\n      });\n      console.log(\"Current cities in CA: \", cities.join(\", \"));\n    });\n  }, []);\n  const [message, setMessage] = useState(\"\");\n\n  const onChatting = e => {\n    setMessage(e.target.value);\n  };\n\n  const onSent = e => {\n    // const messagePackage = {\n    //   user1: currentUser.id,\n    //   user2: selectedUser.id,\n    //   message: message,\n    //   isChatting: true,\n    // };\n    if (!message || !currentUser || !selectedUser) {\n      setMessage(\"\");\n      return;\n    } //save message on firestore\n\n\n    firestore.collection(\"messages\").add({\n      user1: currentUser.id,\n      user2: selectedUser.id,\n      message: message,\n      isChatting: true\n    }).then(docRef => {\n      console.log(\"Document written with ID: \", docRef.id);\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    });\n    setMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatting-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatting-content__header\",\n      children: selectedUser ? selectedUser.displayName : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatting-content__body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatting-content__footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"send-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message here\",\n          onChange: onChatting,\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSent,\n          className: \"btnSendMsg\",\n          id: \"sendMsgBtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), \"send\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChattingContent, \"3/5FmQ3pWGIRMLBqF9P0Dasu+Sw=\");\n\n_c = ChattingContent;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    user\n  } = _ref2;\n  return {\n    selectedUser: user.selectedUser,\n    currentUser: user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(ChattingContent);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChattingContent\");","map":{"version":3,"sources":["/home/mark/workmine/Message-App/src/components/chatting-content/chatting-content.jsx"],"names":["React","useState","useEffect","connect","firestore","ChattingContent","selectedUser","currentUser","collection","where","onSnapshot","querySnapshot","cities","forEach","doc","push","data","name","console","log","join","message","setMessage","onChatting","e","target","value","onSent","add","user1","id","user2","isChatting","then","docRef","catch","error","displayName","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./chatting-content.scss\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nconst ChattingContent = ({ selectedUser, currentUser }) => {\n  useEffect(() => {\n    firestore\n      .collection(\"cities\")\n      .where(\"state\", \"==\", \"CA\")\n      .onSnapshot((querySnapshot) => {\n        var cities = [];\n        querySnapshot.forEach((doc) => {\n          cities.push(doc.data().name);\n        });\n        console.log(\"Current cities in CA: \", cities.join(\", \"));\n      });\n  }, []);\n\n  const [message, setMessage] = useState(\"\");\n  const onChatting = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const onSent = (e) => {\n    // const messagePackage = {\n    //   user1: currentUser.id,\n    //   user2: selectedUser.id,\n    //   message: message,\n    //   isChatting: true,\n    // };\n\n    if (!message || !currentUser || !selectedUser) {\n      setMessage(\"\");\n      return;\n    }\n\n    //save message on firestore\n    firestore\n      .collection(\"messages\")\n      .add({\n        user1: currentUser.id,\n        user2: selectedUser.id,\n        message: message,\n        isChatting: true,\n      })\n      .then((docRef) => {\n        console.log(\"Document written with ID: \", docRef.id);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n\n    setMessage(\"\");\n  };\n\n  return (\n    <div className=\"chatting-content\">\n      <div className=\"chatting-content__header\">\n        {selectedUser ? selectedUser.displayName : null}\n      </div>\n      <div className=\"chatting-content__body\">{}</div>\n\n      <div className=\"chatting-content__footer\">\n        <div className=\"send-message\">\n          <input\n            type=\"text\"\n            placeholder=\"Type your message here\"\n            onChange={onChatting}\n            value={message}\n          />\n          <button onClick={onSent} className=\"btnSendMsg\" id=\"sendMsgBtn\">\n            <i className=\"fa fa-paper-plane\"></i>\n            send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = ({ user }) => ({\n  selectedUser: user.selectedUser,\n  currentUser: user.currentUser,\n});\n\nexport default connect(mapStateToProps)(ChattingContent);\n"]},"metadata":{},"sourceType":"module"}