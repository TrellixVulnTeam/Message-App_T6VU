{"ast":null,"code":"import { addMonths, differenceInCalendarMonths, startOfMonth } from 'date-fns';\n/**\n * Returns the next month the user can navigate to according to the given\n * options.\n *\n * Please note that the next month is not always the next calendar month:\n *\n * - if after the `toDate` range, is undefined;\n * - if the navigation is paged, is the number of months displayed ahead.\n *\n */\n\nexport function getNextMonth(startingMonth, options) {\n  if (options.disableNavigation) {\n    return undefined;\n  }\n\n  var toDate = options.toDate,\n      pagedNavigation = options.pagedNavigation,\n      _a = options.numberOfMonths,\n      numberOfMonths = _a === void 0 ? 1 : _a;\n  var offset = pagedNavigation ? numberOfMonths : 1;\n  var month = startOfMonth(startingMonth);\n\n  if (!toDate) {\n    return addMonths(month, offset);\n  }\n\n  var monthsDiff = differenceInCalendarMonths(toDate, startingMonth);\n\n  if (monthsDiff < numberOfMonths) {\n    return undefined;\n  } // Jump forward as the number of months when paged navigation\n\n\n  return addMonths(month, offset);\n}","map":{"version":3,"sources":["../../../../src/contexts/Navigation/utils/getNextMonth.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,EAAoB,0BAApB,EAAgD,YAAhD,QAAoE,UAApE;AAEA;;;;;;;;;AASG;;AACH,OAAM,SAAU,YAAV,CACJ,aADI,EAEJ,OAFI,EASH;AAED,MAAI,OAAO,CAAC,iBAAZ,EAA+B;AAC7B,WAAO,SAAP;AACD;;AACO,MAAA,MAAM,GAA0C,OAAO,CAAjD,MAAN;AAAA,MAAQ,eAAe,GAAyB,OAAO,CAAhC,eAAvB;AAAA,MAAyB,EAAA,GAAuB,OAAO,CAAZ,cAA3C;AAAA,MAAyB,cAAc,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAI,EAA3C;AACR,MAAM,MAAM,GAAG,eAAe,GAAG,cAAH,GAAoB,CAAlD;AACA,MAAM,KAAK,GAAG,YAAY,CAAC,aAAD,CAA1B;;AAEA,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,SAAS,CAAC,KAAD,EAAQ,MAAR,CAAhB;AACD;;AAED,MAAM,UAAU,GAAG,0BAA0B,CAAC,MAAD,EAAS,aAAT,CAA7C;;AAEA,MAAI,UAAU,GAAG,cAAjB,EAAiC;AAC/B,WAAO,SAAP;AACD,GAjBA,CAmBD;;;AACA,SAAO,SAAS,CAAC,KAAD,EAAQ,MAAR,CAAhB;AACD","sourcesContent":["import { addMonths, differenceInCalendarMonths, startOfMonth } from 'date-fns';\n/**\n * Returns the next month the user can navigate to according to the given\n * options.\n *\n * Please note that the next month is not always the next calendar month:\n *\n * - if after the `toDate` range, is undefined;\n * - if the navigation is paged, is the number of months displayed ahead.\n *\n */\nexport function getNextMonth(startingMonth, options) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    var toDate = options.toDate, pagedNavigation = options.pagedNavigation, _a = options.numberOfMonths, numberOfMonths = _a === void 0 ? 1 : _a;\n    var offset = pagedNavigation ? numberOfMonths : 1;\n    var month = startOfMonth(startingMonth);\n    if (!toDate) {\n        return addMonths(month, offset);\n    }\n    var monthsDiff = differenceInCalendarMonths(toDate, startingMonth);\n    if (monthsDiff < numberOfMonths) {\n        return undefined;\n    }\n    // Jump forward as the number of months when paged navigation\n    return addMonths(month, offset);\n}\n"]},"metadata":{},"sourceType":"module"}