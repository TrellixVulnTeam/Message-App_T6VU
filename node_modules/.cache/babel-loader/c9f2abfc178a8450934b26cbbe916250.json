{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React from 'react';\nimport { useId } from '@reach/auto-id';\nimport { Table } from '../../components/Table';\nimport { useDayPicker } from '../../contexts/DayPicker';\nimport { useNavigation } from '../../contexts/Navigation';\n/** Render a month. */\n\nexport function Month(props) {\n  var _a;\n\n  var _b = useDayPicker(),\n      dir = _b.dir,\n      classNames = _b.classNames,\n      styles = _b.styles,\n      Caption = _b.components.Caption;\n\n  var displayMonths = useNavigation().displayMonths;\n  var captionId = useId();\n  var className = [classNames.month];\n  var style = styles.month;\n  var isStart = props.displayIndex === 0;\n  var isEnd = props.displayIndex === displayMonths.length - 1;\n  var isCenter = !isStart && !isEnd;\n\n  if (dir === 'rtl') {\n    _a = [isStart, isEnd], isEnd = _a[0], isStart = _a[1];\n  }\n\n  if (isStart) {\n    className.push(classNames.caption_start);\n    style = __assign(__assign({}, style), styles.caption_start);\n  }\n\n  if (isEnd) {\n    className.push(classNames.caption_end);\n    style = __assign(__assign({}, style), styles.caption_end);\n  }\n\n  if (isCenter) {\n    className.push(classNames.caption_between);\n    style = __assign(__assign({}, style), styles.caption_between);\n  }\n\n  return React.createElement(\"div\", {\n    key: props.displayIndex,\n    className: className.join(' '),\n    style: style\n  }, React.createElement(Caption, {\n    id: captionId,\n    displayMonth: props.displayMonth\n  }), React.createElement(Table, {\n    \"aria-labelledby\": captionId,\n    displayMonth: props.displayMonth\n  }));\n}","map":{"version":3,"sources":["../../../src/components/Month/Month.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,KAAT,QAAsB,gBAAtB;AAEA,SAAS,KAAT,QAAsB,wBAAtB;AACA,SAAS,YAAT,QAA6B,0BAA7B;AACA,SAAS,aAAT,QAA8B,2BAA9B;AAQA;;AACA,OAAM,SAAU,KAAV,CAAgB,KAAhB,EAAiC;;;AAC/B,MAAA,EAAA,GAKF,YAAY,EALV;AAAA,MACJ,GAAG,GAAA,EAAA,CAAA,GADC;AAAA,MAEJ,UAAU,GAAA,EAAA,CAAA,UAFN;AAAA,MAGJ,MAAM,GAAA,EAAA,CAAA,MAHF;AAAA,MAIU,OAAO,GAAA,EAAA,CAAA,UAAA,CAAA,OAJjB;;AAME,MAAA,aAAa,GAAK,aAAa,GAAlB,aAAb;AACR,MAAM,SAAS,GAAG,KAAK,EAAvB;AACA,MAAM,SAAS,GAAG,CAAC,UAAU,CAAC,KAAZ,CAAlB;AACA,MAAI,KAAK,GAAG,MAAM,CAAC,KAAnB;AAEA,MAAI,OAAO,GAAG,KAAK,CAAC,YAAN,KAAuB,CAArC;AACA,MAAI,KAAK,GAAG,KAAK,CAAC,YAAN,KAAuB,aAAa,CAAC,MAAd,GAAuB,CAA1D;AACA,MAAM,QAAQ,GAAG,CAAC,OAAD,IAAY,CAAC,KAA9B;;AACA,MAAI,GAAG,KAAK,KAAZ,EAAmB;AACjB,IAAA,EAAA,GAAmB,CAAC,OAAD,EAAU,KAAV,CAAnB,EAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN,EAAQ,OAAO,GAAA,EAAA,CAAA,CAAA,CAAf;AACD;;AAED,MAAI,OAAJ,EAAa;AACX,IAAA,SAAS,CAAC,IAAV,CAAe,UAAU,CAAC,aAA1B;AACA,IAAA,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,KAAR,CAAA,EAAkB,MAAM,CAAC,aAAzB,CAAL;AACD;;AACD,MAAI,KAAJ,EAAW;AACT,IAAA,SAAS,CAAC,IAAV,CAAe,UAAU,CAAC,WAA1B;AACA,IAAA,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,KAAR,CAAA,EAAkB,MAAM,CAAC,WAAzB,CAAL;AACD;;AACD,MAAI,QAAJ,EAAc;AACZ,IAAA,SAAS,CAAC,IAAV,CAAe,UAAU,CAAC,eAA1B;AACA,IAAA,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,KAAR,CAAA,EAAkB,MAAM,CAAC,eAAzB,CAAL;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,GAAG,EAAE,KAAK,CAAC,YAAhB;AAA8B,IAAA,SAAS,EAAE,SAAS,CAAC,IAAV,CAAe,GAAf,CAAzC;AAA8D,IAAA,KAAK,EAAE;AAArE,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,IAAA,EAAE,EAAE,SAAL;AAAgB,IAAA,YAAY,EAAE,KAAK,CAAC;AAApC,GAAR,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAA,uBAAkB,SAAlB;AAA6B,IAAA,YAAY,EAAE,KAAK,CAAC;AAAjD,GAAN,CAFF,CADF;AAMD","sourcesContent":["import { __assign } from \"tslib\";\nimport React from 'react';\nimport { useId } from '@reach/auto-id';\nimport { Table } from '../../components/Table';\nimport { useDayPicker } from '../../contexts/DayPicker';\nimport { useNavigation } from '../../contexts/Navigation';\n/** Render a month. */\nexport function Month(props) {\n    var _a;\n    var _b = useDayPicker(), dir = _b.dir, classNames = _b.classNames, styles = _b.styles, Caption = _b.components.Caption;\n    var displayMonths = useNavigation().displayMonths;\n    var captionId = useId();\n    var className = [classNames.month];\n    var style = styles.month;\n    var isStart = props.displayIndex === 0;\n    var isEnd = props.displayIndex === displayMonths.length - 1;\n    var isCenter = !isStart && !isEnd;\n    if (dir === 'rtl') {\n        _a = [isStart, isEnd], isEnd = _a[0], isStart = _a[1];\n    }\n    if (isStart) {\n        className.push(classNames.caption_start);\n        style = __assign(__assign({}, style), styles.caption_start);\n    }\n    if (isEnd) {\n        className.push(classNames.caption_end);\n        style = __assign(__assign({}, style), styles.caption_end);\n    }\n    if (isCenter) {\n        className.push(classNames.caption_between);\n        style = __assign(__assign({}, style), styles.caption_between);\n    }\n    return (React.createElement(\"div\", { key: props.displayIndex, className: className.join(' '), style: style },\n        React.createElement(Caption, { id: captionId, displayMonth: props.displayMonth }),\n        React.createElement(Table, { \"aria-labelledby\": captionId, displayMonth: props.displayMonth })));\n}\n"]},"metadata":{},"sourceType":"module"}