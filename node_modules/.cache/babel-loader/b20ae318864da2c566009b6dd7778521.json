{"ast":null,"code":"var _jsxFileName = \"/home/mark/workmine/Message-App/src/App.js\";\nimport React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"./firebase/firebase.utils\";\nimport Header from \"./pages/header/header.component\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport Login from \"./pages/login/login.component\";\nimport { setCurrentUser, listAllUser } from \"./redux/user/user.actions\";\nimport { createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { firestore } from \"./firebase/firebase.utils\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n    const db = firestore.collection(\"users\").onSnapshot(querySnapshot => {\n      var cities = [];\n      querySnapshot.forEach(doc => {\n        cities.push(doc.data().name);\n      });\n      console.log(\"Current cities in CA: \", cities.join(\", \"));\n    });\n    console.log(\"ðŸš€ ~ file: App.js ~ line 39 ~ App ~ componentDidMount ~ db\", db); // const unsubscribe = db.collection(\"users\"); // .where(\"state\", \"==\", \"CA\")\n    // console.log(unsubscribe);\n    // .onSnapshot((querySnapshot) => {\n    //   var cities = [];\n    //   querySnapshot.forEach((doc) => {\n    //     cities.push(doc.data().name);\n    //   });\n    //   console.log(\"Current cities in CA: \", cities.join(\", \"));\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = _ref => {\n  let {\n    user\n  } = _ref;\n  return {\n    currentUser: user.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  listAllUser: allUser => dispatch(listAllUser(allUser))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/mark/workmine/Message-App/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","auth","Header","HomePage","Login","setCurrentUser","listAllUser","createUserProfileDocument","firestore","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","console","log","db","collection","querySnapshot","cities","forEach","doc","push","name","join","componentWillUnmount","render","mapStateToProps","user","currentUser","mapDispatchToProps","dispatch","allUser"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { auth } from \"./firebase/firebase.utils\";\n\nimport Header from \"./pages/header/header.component\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport Login from \"./pages/login/login.component\";\nimport { setCurrentUser, listAllUser } from \"./redux/user/user.actions\";\n\nimport { createUserProfileDocument } from \"./firebase/firebase.utils\";\n\nimport { firestore } from \"./firebase/firebase.utils\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      }\n      setCurrentUser(userAuth);\n    });\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n\n    const db = firestore.collection(\"users\").onSnapshot((querySnapshot) => {\n      var cities = [];\n      querySnapshot.forEach((doc) => {\n        cities.push(doc.data().name);\n      });\n      console.log(\"Current cities in CA: \", cities.join(\", \"));\n    });\n\n    console.log(\n      \"ðŸš€ ~ file: App.js ~ line 39 ~ App ~ componentDidMount ~ db\",\n      db\n    );\n\n    // const unsubscribe = db.collection(\"users\"); // .where(\"state\", \"==\", \"CA\")\n\n    // console.log(unsubscribe);\n\n    // .onSnapshot((querySnapshot) => {\n    //   var cities = [];\n    //   querySnapshot.forEach((doc) => {\n    //     cities.push(doc.data().name);\n    //   });\n    //   console.log(\"Current cities in CA: \", cities.join(\", \"));\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header></Header>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/login\" component={Login} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  listAllUser: (allUser) => dispatch(listAllUser(allUser)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}