{"ast":null,"code":"var _jsxFileName = \"/home/mark/workmine/Message-App/src/components/user-items/user-item.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AvatarName from \"../avatar-name/avatar-name.component\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { setSelectedUser } from \"../../redux/user/user.actions\";\nimport { setMessageChatted } from \"../../redux/messages/messages.action\";\nimport \"./user-item.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserItem = _ref => {\n  let {\n    user,\n    setSelectedUser,\n    currentUser,\n    setMessageChatted\n  } = _ref;\n  const {\n    displayName,\n    isOnline,\n    avatarSrc\n  } = user;\n\n  const onSelectedUser = () => {\n    setSelectedUser(user); // if (!currentUser || !user) return;\n\n    firestore.collection(\"messages\") // .where(currentUser.id, \"in\", [\"user1\", \"user2\"])\n    .orderBy(\"createdAt\").onSnapshot(querySnapshot => {\n      var allMessages = [];\n      querySnapshot.forEach(doc => {\n        if (doc.data().user1 === currentUser.id && doc.data().user2 === user.id || doc.data().user1 === user.id && doc.data().user2 === currentUser.id) {\n          allMessages.push(doc.data());\n        }\n      });\n      setMessageChatted(allMessages);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onSelectedUser,\n    className: `chatlist__item ${isOnline ? isOnline : \"\"} `,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${isOnline ? \"active\" : \"off\"} active-status`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvatarName, {\n        avatarSrc: avatarSrc,\n        displayName: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UserItem;\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedUser: user => dispatch(setSelectedUser(user)),\n  setMessageChatted: messageChatted => dispatch(setMessageChatted(messageChatted))\n});\n\nconst mapStateToProps = _ref2 => {\n  let {\n    user: {\n      currentUser\n    }\n  } = _ref2;\n  return {\n    currentUser\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserItem\");","map":{"version":3,"sources":["/home/mark/workmine/Message-App/src/components/user-items/user-item.component.jsx"],"names":["React","Component","connect","AvatarName","firestore","setSelectedUser","setMessageChatted","UserItem","user","currentUser","displayName","isOnline","avatarSrc","onSelectedUser","collection","orderBy","onSnapshot","querySnapshot","allMessages","forEach","doc","data","user1","id","user2","push","mapDispatchToProps","dispatch","messageChatted","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AAEA,OAAO,yBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAKX;AAAA,MALY;AAChBC,IAAAA,IADgB;AAEhBH,IAAAA,eAFgB;AAGhBI,IAAAA,WAHgB;AAIhBH,IAAAA;AAJgB,GAKZ;AACJ,QAAM;AAAEI,IAAAA,WAAF;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAuCJ,IAA7C;;AAEA,QAAMK,cAAc,GAAG,MAAM;AAC3BR,IAAAA,eAAe,CAACG,IAAD,CAAf,CAD2B,CAE3B;;AACAJ,IAAAA,SAAS,CACNU,UADH,CACc,UADd,EAEE;AAFF,KAGGC,OAHH,CAGW,WAHX,EAIGC,UAJH,CAIeC,aAAD,IAAmB;AAC7B,UAAIC,WAAW,GAAG,EAAlB;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;AAC7B,YACGA,GAAG,CAACC,IAAJ,GAAWC,KAAX,KAAqBb,WAAW,CAACc,EAAjC,IACCH,GAAG,CAACC,IAAJ,GAAWG,KAAX,KAAqBhB,IAAI,CAACe,EAD5B,IAECH,GAAG,CAACC,IAAJ,GAAWC,KAAX,KAAqBd,IAAI,CAACe,EAA1B,IACCH,GAAG,CAACC,IAAJ,GAAWG,KAAX,KAAqBf,WAAW,CAACc,EAJrC,EAKE;AACAL,UAAAA,WAAW,CAACO,IAAZ,CAAiBL,GAAG,CAACC,IAAJ,EAAjB;AACD;AACF,OATD;AAWAf,MAAAA,iBAAiB,CAACY,WAAD,CAAjB;AACD,KAlBH;AAmBD,GAtBD;;AAwBA,sBACE;AACE,IAAA,OAAO,EAAEL,cADX;AAEE,IAAA,SAAS,EAAG,kBAAiBF,QAAQ,GAAGA,QAAH,GAAc,EAAG,GAFxD;AAAA,2BAIE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAG,GAAEA,QAAQ,GAAG,QAAH,GAAc,KAAM;AAAhD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEC,SAAvB;AAAkC,QAAA,WAAW,EAAEF;AAA/C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5CD;;KAAMH,Q;;AA8CN,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACxCtB,EAAAA,eAAe,EAAGG,IAAD,IAAUmB,QAAQ,CAACtB,eAAe,CAACG,IAAD,CAAhB,CADK;AAExCF,EAAAA,iBAAiB,EAAGsB,cAAD,IACjBD,QAAQ,CAACrB,iBAAiB,CAACsB,cAAD,CAAlB;AAH8B,CAAf,CAA3B;;AAMA,MAAMC,eAAe,GAAG;AAAA,MAAC;AAAErB,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,GAAD;AAAA,SAAgC;AACtDA,IAAAA;AADsD,GAAhC;AAAA,CAAxB;;AAIA,eAAeP,OAAO,CAAC2B,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CnB,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AvatarName from \"../avatar-name/avatar-name.component\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { setSelectedUser } from \"../../redux/user/user.actions\";\nimport { setMessageChatted } from \"../../redux/messages/messages.action\";\n\nimport \"./user-item.styles.scss\";\n\nconst UserItem = ({\n  user,\n  setSelectedUser,\n  currentUser,\n  setMessageChatted,\n}) => {\n  const { displayName, isOnline, avatarSrc } = user;\n\n  const onSelectedUser = () => {\n    setSelectedUser(user);\n    // if (!currentUser || !user) return;\n    firestore\n      .collection(\"messages\")\n      // .where(currentUser.id, \"in\", [\"user1\", \"user2\"])\n      .orderBy(\"createdAt\")\n      .onSnapshot((querySnapshot) => {\n        var allMessages = [];\n        querySnapshot.forEach((doc) => {\n          if (\n            (doc.data().user1 === currentUser.id &&\n              doc.data().user2 === user.id) ||\n            (doc.data().user1 === user.id &&\n              doc.data().user2 === currentUser.id)\n          ) {\n            allMessages.push(doc.data());\n          }\n        });\n\n        setMessageChatted(allMessages);\n      });\n  };\n\n  return (\n    <div\n      onClick={onSelectedUser}\n      className={`chatlist__item ${isOnline ? isOnline : \"\"} `}\n    >\n      <div className=\"flex\">\n        <span className={`${isOnline ? \"active\" : \"off\"} active-status`}></span>\n\n        <AvatarName avatarSrc={avatarSrc} displayName={displayName} />\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelectedUser: (user) => dispatch(setSelectedUser(user)),\n  setMessageChatted: (messageChatted) =>\n    dispatch(setMessageChatted(messageChatted)),\n});\n\nconst mapStateToProps = ({ user: { currentUser } }) => ({\n  currentUser,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserItem);\n"]},"metadata":{},"sourceType":"module"}