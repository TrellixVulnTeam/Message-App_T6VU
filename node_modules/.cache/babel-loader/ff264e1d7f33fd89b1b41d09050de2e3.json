{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { useDayPicker } from '../../contexts/DayPicker';\nimport { useModifiers } from '../../contexts/Modifiers';\nimport { getModifierStatus } from './utils/getModifierStatus';\n/** Return the modifiers and its styles for the specified date. */\n\nexport function useDayModifiers(date) {\n  var context = useDayPicker();\n  var modifiersContext = useModifiers(); // TODO: Is there a better name for the type ModifierStatus?\n\n  var modifiers = getModifierStatus(date, modifiersContext);\n  var modifierClassNames = [];\n  Object.keys(modifiers).forEach(function (modifier) {\n    var customClassName = context.modifierClassNames[modifier];\n\n    if (customClassName) {\n      modifierClassNames.push(customClassName);\n    } else {\n      modifierClassNames.push(\"\" + context.modifierPrefix + modifier);\n    }\n  });\n  var modifierStyle = {};\n\n  if (context.modifierStyles) {\n    Object.keys(modifiers).forEach(function (modifier) {\n      var _a;\n\n      modifierStyle = __assign(__assign({}, modifierStyle), (_a = context.modifierStyles) === null || _a === void 0 ? void 0 : _a[modifier]);\n    });\n  }\n\n  return {\n    modifiers: modifiers,\n    modifierClassNames: modifierClassNames,\n    modifierStyle: modifierStyle\n  };\n}","map":{"version":3,"sources":["../../../src/hooks/useDayModifiers/useDayModifiers.ts"],"names":[],"mappings":";AAAA,SAAS,YAAT,QAA6B,0BAA7B;AACA,SAAS,YAAT,QAA6B,0BAA7B;AAGA,SAAS,iBAAT,QAAkC,2BAAlC;AAWA;;AACA,OAAM,SAAU,eAAV,CAA0B,IAA1B,EAAoC;AACxC,MAAM,OAAO,GAAG,YAAY,EAA5B;AAEA,MAAM,gBAAgB,GAAG,YAAY,EAArC,CAHwC,CAKxC;;AACA,MAAM,SAAS,GAAG,iBAAiB,CAAC,IAAD,EAAO,gBAAP,CAAnC;AAEA,MAAM,kBAAkB,GAAa,EAArC;AAEA,EAAA,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,UAAC,QAAD,EAAS;AACtC,QAAM,eAAe,GAAG,OAAO,CAAC,kBAAR,CAA2B,QAA3B,CAAxB;;AACA,QAAI,eAAJ,EAAqB;AACnB,MAAA,kBAAkB,CAAC,IAAnB,CAAwB,eAAxB;AACD,KAFD,MAEO;AACL,MAAA,kBAAkB,CAAC,IAAnB,CAAwB,KAAG,OAAO,CAAC,cAAX,GAA4B,QAApD;AACD;AACF,GAPD;AASA,MAAI,aAAa,GAAG,EAApB;;AACA,MAAI,OAAO,CAAC,cAAZ,EAA4B;AAC1B,IAAA,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,UAAC,QAAD,EAAS;;;AACtC,MAAA,aAAa,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACR,aADQ,CAAA,EAER,CAAA,EAAA,GAAA,OAAO,CAAC,cAAR,MAAsB,IAAtB,IAAsB,EAAA,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAsB,EAAA,CAAG,QAAH,CAFd,CAAb;AAID,KALD;AAMD;;AAED,SAAO;AACL,IAAA,SAAS,EAAA,SADJ;AAEL,IAAA,kBAAkB,EAAA,kBAFb;AAGL,IAAA,aAAa,EAAA;AAHR,GAAP;AAKD","sourcesContent":["import { __assign } from \"tslib\";\nimport { useDayPicker } from '../../contexts/DayPicker';\nimport { useModifiers } from '../../contexts/Modifiers';\nimport { getModifierStatus } from './utils/getModifierStatus';\n/** Return the modifiers and its styles for the specified date. */\nexport function useDayModifiers(date) {\n    var context = useDayPicker();\n    var modifiersContext = useModifiers();\n    // TODO: Is there a better name for the type ModifierStatus?\n    var modifiers = getModifierStatus(date, modifiersContext);\n    var modifierClassNames = [];\n    Object.keys(modifiers).forEach(function (modifier) {\n        var customClassName = context.modifierClassNames[modifier];\n        if (customClassName) {\n            modifierClassNames.push(customClassName);\n        }\n        else {\n            modifierClassNames.push(\"\" + context.modifierPrefix + modifier);\n        }\n    });\n    var modifierStyle = {};\n    if (context.modifierStyles) {\n        Object.keys(modifiers).forEach(function (modifier) {\n            var _a;\n            modifierStyle = __assign(__assign({}, modifierStyle), (_a = context.modifierStyles) === null || _a === void 0 ? void 0 : _a[modifier]);\n        });\n    }\n    return {\n        modifiers: modifiers,\n        modifierClassNames: modifierClassNames,\n        modifierStyle: modifierStyle\n    };\n}\n"]},"metadata":{},"sourceType":"module"}