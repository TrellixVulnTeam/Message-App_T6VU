{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React from 'react';\nimport { Month } from '../../components/Month';\nimport { useDayPicker } from '../../contexts/DayPicker';\nimport { useFocus } from '../../contexts/Focus';\nimport { useNavigation } from '../../contexts/Navigation';\n/**\n * Render the container with the months and their captions. The number of months\n * rendered depends by the `numberOfMonths` prop.\n */\n\nexport function Root() {\n  var _a = useDayPicker(),\n      dir = _a.dir,\n      className = _a.className,\n      classNames = _a.classNames,\n      style = _a.style,\n      styles = _a.styles,\n      numberOfMonths = _a.numberOfMonths,\n      showWeekNumber = _a.showWeekNumber,\n      initialFocus = _a.initialFocus;\n\n  var _b = useFocus(),\n      focusTarget = _b.focusTarget,\n      focus = _b.focus;\n\n  var _c = React.useState(false),\n      hasInitialFocus = _c[0],\n      setHasInitialFocus = _c[1];\n\n  var displayMonths = useNavigation().displayMonths;\n  var rootClassNames = [className !== null && className !== void 0 ? className : classNames.root];\n\n  if (numberOfMonths > 1) {\n    rootClassNames.push(classNames.multiple_months);\n  }\n\n  if (showWeekNumber) {\n    rootClassNames.push(classNames.with_weeknumber);\n  }\n\n  React.useEffect(function () {\n    if (initialFocus && !hasInitialFocus && focusTarget) {\n      focus(focusTarget);\n      setHasInitialFocus(true);\n    }\n  }, [initialFocus, hasInitialFocus, focus, focusTarget]);\n  return React.createElement(\"div\", {\n    className: rootClassNames.join(' '),\n    style: __assign(__assign({}, styles.root), style),\n    dir: dir\n  }, React.createElement(\"div\", {\n    className: classNames.months,\n    style: styles.months\n  }, displayMonths.map(function (month, i) {\n    return React.createElement(Month, {\n      key: i,\n      displayIndex: i,\n      displayMonth: month\n    });\n  })));\n}","map":{"version":3,"sources":["../../../src/components/Root/Root.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,KAAT,QAAsB,wBAAtB;AACA,SAAS,YAAT,QAA6B,0BAA7B;AACA,SAAS,QAAT,QAAyB,sBAAzB;AACA,SAAS,aAAT,QAA8B,2BAA9B;AAEA;;;AAGG;;AACH,OAAM,SAAU,IAAV,GAAc;AACZ,MAAA,EAAA,GASF,YAAY,EATV;AAAA,MACJ,GAAG,GAAA,EAAA,CAAA,GADC;AAAA,MAEJ,SAAS,GAAA,EAAA,CAAA,SAFL;AAAA,MAGJ,UAAU,GAAA,EAAA,CAAA,UAHN;AAAA,MAIJ,KAAK,GAAA,EAAA,CAAA,KAJD;AAAA,MAKJ,MAAM,GAAA,EAAA,CAAA,MALF;AAAA,MAMJ,cAAc,GAAA,EAAA,CAAA,cANV;AAAA,MAOJ,cAAc,GAAA,EAAA,CAAA,cAPV;AAAA,MAQJ,YAAY,GAAA,EAAA,CAAA,YARR;;AAWA,MAAA,EAAA,GAAyB,QAAQ,EAAjC;AAAA,MAAE,WAAW,GAAA,EAAA,CAAA,WAAb;AAAA,MAAe,KAAK,GAAA,EAAA,CAAA,KAApB;;AACA,MAAA,EAAA,GAAwC,KAAK,CAAC,QAAN,CAAe,KAAf,CAAxC;AAAA,MAAC,eAAe,GAAA,EAAA,CAAA,CAAA,CAAhB;AAAA,MAAkB,kBAAkB,GAAA,EAAA,CAAA,CAAA,CAApC;;AACE,MAAA,aAAa,GAAK,aAAa,GAAlB,aAAb;AAER,MAAM,cAAc,GAAG,CAAC,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAA,SAAA,GAAa,UAAU,CAAC,IAAzB,CAAvB;;AACA,MAAI,cAAc,GAAG,CAArB,EAAwB;AACtB,IAAA,cAAc,CAAC,IAAf,CAAoB,UAAU,CAAC,eAA/B;AACD;;AACD,MAAI,cAAJ,EAAoB;AAClB,IAAA,cAAc,CAAC,IAAf,CAAoB,UAAU,CAAC,eAA/B;AACD;;AAED,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,QAAI,YAAY,IAAI,CAAC,eAAjB,IAAoC,WAAxC,EAAqD;AACnD,MAAA,KAAK,CAAC,WAAD,CAAL;AACA,MAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,GALD,EAKG,CAAC,YAAD,EAAe,eAAf,EAAgC,KAAhC,EAAuC,WAAvC,CALH;AAOA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,cAAc,CAAC,IAAf,CAAoB,GAApB,CADb;AAEE,IAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,MAAM,CAAC,IAAd,CAAA,EAAuB,KAAvB,CAFP;AAGE,IAAA,GAAG,EAAE;AAHP,GAAA,EAKE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,UAAU,CAAC,MAA3B;AAAmC,IAAA,KAAK,EAAE,MAAM,CAAC;AAAjD,GAAA,EACG,aAAa,CAAC,GAAd,CAAkB,UAAC,KAAD,EAAQ,CAAR,EAAS;AAAK,WAC/B,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,MAAA,GAAG,EAAE,CAAN;AAAS,MAAA,YAAY,EAAE,CAAvB;AAA0B,MAAA,YAAY,EADb;AACzB,KAAN,CAD+B;AAEhC,GAFA,CADH,CALF,CADF;AAaD","sourcesContent":["import { __assign } from \"tslib\";\nimport React from 'react';\nimport { Month } from '../../components/Month';\nimport { useDayPicker } from '../../contexts/DayPicker';\nimport { useFocus } from '../../contexts/Focus';\nimport { useNavigation } from '../../contexts/Navigation';\n/**\n * Render the container with the months and their captions. The number of months\n * rendered depends by the `numberOfMonths` prop.\n */\nexport function Root() {\n    var _a = useDayPicker(), dir = _a.dir, className = _a.className, classNames = _a.classNames, style = _a.style, styles = _a.styles, numberOfMonths = _a.numberOfMonths, showWeekNumber = _a.showWeekNumber, initialFocus = _a.initialFocus;\n    var _b = useFocus(), focusTarget = _b.focusTarget, focus = _b.focus;\n    var _c = React.useState(false), hasInitialFocus = _c[0], setHasInitialFocus = _c[1];\n    var displayMonths = useNavigation().displayMonths;\n    var rootClassNames = [className !== null && className !== void 0 ? className : classNames.root];\n    if (numberOfMonths > 1) {\n        rootClassNames.push(classNames.multiple_months);\n    }\n    if (showWeekNumber) {\n        rootClassNames.push(classNames.with_weeknumber);\n    }\n    React.useEffect(function () {\n        if (initialFocus && !hasInitialFocus && focusTarget) {\n            focus(focusTarget);\n            setHasInitialFocus(true);\n        }\n    }, [initialFocus, hasInitialFocus, focus, focusTarget]);\n    return (React.createElement(\"div\", { className: rootClassNames.join(' '), style: __assign(__assign({}, styles.root), style), dir: dir },\n        React.createElement(\"div\", { className: classNames.months, style: styles.months }, displayMonths.map(function (month, i) { return (React.createElement(Month, { key: i, displayIndex: i, displayMonth: month })); }))));\n}\n"]},"metadata":{},"sourceType":"module"}