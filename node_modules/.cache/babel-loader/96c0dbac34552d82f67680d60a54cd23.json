{"ast":null,"code":"var _jsxFileName = \"/home/mark/workmine/Message-App/src/App.js\";\nimport React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"./firebase/firebase.utils\";\nimport Header from \"./pages/header/header.component\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport Login from \"./pages/login/login.component\";\nimport { setCurrentUser, listAllUser } from \"./redux/user/user.actions\";\nimport { createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { firestore } from \"./firebase/firebase.utils\";\nimport { setMessageChatted } from \"./redux/messages/messages.action\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser,\n      listAllUser,\n      currentUser,\n      setMessageChatted\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          const db = firestore.collection(\"users\").onSnapshot(querySnapshot => {\n            var users = [];\n            querySnapshot.forEach(doc => {\n              if (snapShot.id != doc.id) users.push({\n                id: doc.id,\n                ...doc.data()\n              });\n            });\n            listAllUser(users);\n          });\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n        firestore.collection(\"messages\").where(\"user1\", \"in\", [currentUser.id, user.id]).orderBy(\"chattedAt\").onSnapshot(querySnapshot => {\n          var allMessages = [];\n          querySnapshot.forEach(doc => {\n            // if (\n            //   (doc.data().user1 == currentUser.id &&\n            //     doc.data().user2 == user.id) ||\n            //   (doc.data().user1 == user.id && doc.data().user2 == currentUser.id)\n            // )\n            {\n              allMessages.push(doc.data());\n            }\n          });\n          setMessageChatted(allMessages);\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => !this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = _ref => {\n  let {\n    user\n  } = _ref;\n  return {\n    currentUser: user.currentUser,\n    selectedUser: user.selectedUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  listAllUser: allUser => dispatch(listAllUser(allUser)),\n  setMessageChatted: messageChatted => dispatch(setMessageChatted(messageChatted))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/mark/workmine/Message-App/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","auth","Header","HomePage","Login","setCurrentUser","listAllUser","createUserProfileDocument","firestore","setMessageChatted","App","Component","unsubscribeFromAuth","componentDidMount","currentUser","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","db","collection","querySnapshot","users","forEach","doc","id","push","data","where","user","orderBy","allMessages","componentWillUnmount","render","mapStateToProps","selectedUser","mapDispatchToProps","dispatch","allUser","messageChatted"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { auth } from \"./firebase/firebase.utils\";\n\nimport Header from \"./pages/header/header.component\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport Login from \"./pages/login/login.component\";\nimport { setCurrentUser, listAllUser } from \"./redux/user/user.actions\";\n\nimport { createUserProfileDocument } from \"./firebase/firebase.utils\";\n\nimport { firestore } from \"./firebase/firebase.utils\";\n\nimport { setMessageChatted } from \"./redux/messages/messages.action\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser, listAllUser, currentUser, setMessageChatted } =\n      this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot((snapShot) => {\n          const db = firestore\n            .collection(\"users\")\n            .onSnapshot((querySnapshot) => {\n              var users = [];\n              querySnapshot.forEach((doc) => {\n                if (snapShot.id != doc.id)\n                  users.push({ id: doc.id, ...doc.data() });\n              });\n\n              listAllUser(users);\n            });\n\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n\n        firestore\n          .collection(\"messages\")\n          .where(\"user1\", \"in\", [currentUser.id, user.id])\n          .orderBy(\"chattedAt\")\n          .onSnapshot((querySnapshot) => {\n            var allMessages = [];\n            querySnapshot.forEach((doc) => {\n              // if (\n              //   (doc.data().user1 == currentUser.id &&\n              //     doc.data().user2 == user.id) ||\n              //   (doc.data().user1 == user.id && doc.data().user2 == currentUser.id)\n              // )\n              {\n                allMessages.push(doc.data());\n              }\n            });\n\n            setMessageChatted(allMessages);\n          });\n      }\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header></Header>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() =>\n              !this.props.currentUser ? <Redirect to=\"/login\" /> : <HomePage />\n            }\n          />\n          <Route exact path=\"/login\" component={Login} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser,\n  selectedUser: user.selectedUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  listAllUser: (allUser) => dispatch(listAllUser(allUser)),\n  setMessageChatted: (messageChatted) =>\n    dispatch(setMessageChatted(messageChatted)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}