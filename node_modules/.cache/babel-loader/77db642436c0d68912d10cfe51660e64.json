{"ast":null,"code":"import { addMonths, differenceInCalendarMonths, startOfMonth } from 'date-fns';\n/** Return the initial month according to the given options. */\n\nexport function getInitialMonth(context) {\n  var month = context.month,\n      defaultMonth = context.defaultMonth,\n      today = context.today;\n  var initialMonth = month || defaultMonth || today || new Date();\n  var toDate = context.toDate,\n      fromDate = context.fromDate,\n      _a = context.numberOfMonths,\n      numberOfMonths = _a === void 0 ? 1 : _a; // Fix the initialMonth if is after the to-date\n\n  if (toDate && differenceInCalendarMonths(toDate, initialMonth) < 0) {\n    var offset = -1 * (numberOfMonths - 1);\n    initialMonth = addMonths(toDate, offset);\n  } // Fix the initialMonth if is before the from-date\n\n\n  if (fromDate && differenceInCalendarMonths(initialMonth, fromDate) < 0) {\n    initialMonth = fromDate;\n  }\n\n  return startOfMonth(initialMonth);\n}","map":{"version":3,"sources":["../../../../src/contexts/Navigation/utils/getInitialMonth.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,EAAoB,0BAApB,EAAgD,YAAhD,QAAoE,UAApE;AAIA;;AACA,OAAM,SAAU,eAAV,CAA0B,OAA1B,EAAiE;AAC7D,MAAA,KAAK,GAA0B,OAAO,CAAjC,KAAL;AAAA,MAAO,YAAY,GAAY,OAAO,CAAnB,YAAnB;AAAA,MAAqB,KAAK,GAAK,OAAO,CAAZ,KAA1B;AACR,MAAI,YAAY,GAAG,KAAK,IAAI,YAAT,IAAyB,KAAzB,IAAkC,IAAI,IAAJ,EAArD;AAEQ,MAAA,MAAM,GAAmC,OAAO,CAA1C,MAAN;AAAA,MAAQ,QAAQ,GAAyB,OAAO,CAAhC,QAAhB;AAAA,MAAkB,EAAA,GAAuB,OAAO,CAAZ,cAApC;AAAA,MAAkB,cAAc,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAI,EAApC,CAJ6D,CAMrE;;AACA,MAAI,MAAM,IAAI,0BAA0B,CAAC,MAAD,EAAS,YAAT,CAA1B,GAAmD,CAAjE,EAAoE;AAClE,QAAM,MAAM,GAAG,CAAC,CAAD,IAAM,cAAc,GAAG,CAAvB,CAAf;AACA,IAAA,YAAY,GAAG,SAAS,CAAC,MAAD,EAAS,MAAT,CAAxB;AACD,GAVoE,CAWrE;;;AACA,MAAI,QAAQ,IAAI,0BAA0B,CAAC,YAAD,EAAe,QAAf,CAA1B,GAAqD,CAArE,EAAwE;AACtE,IAAA,YAAY,GAAG,QAAf;AACD;;AACD,SAAO,YAAY,CAAC,YAAD,CAAnB;AACD","sourcesContent":["import { addMonths, differenceInCalendarMonths, startOfMonth } from 'date-fns';\n/** Return the initial month according to the given options. */\nexport function getInitialMonth(context) {\n    var month = context.month, defaultMonth = context.defaultMonth, today = context.today;\n    var initialMonth = month || defaultMonth || today || new Date();\n    var toDate = context.toDate, fromDate = context.fromDate, _a = context.numberOfMonths, numberOfMonths = _a === void 0 ? 1 : _a;\n    // Fix the initialMonth if is after the to-date\n    if (toDate && differenceInCalendarMonths(toDate, initialMonth) < 0) {\n        var offset = -1 * (numberOfMonths - 1);\n        initialMonth = addMonths(toDate, offset);\n    }\n    // Fix the initialMonth if is before the from-date\n    if (fromDate && differenceInCalendarMonths(initialMonth, fromDate) < 0) {\n        initialMonth = fromDate;\n    }\n    return startOfMonth(initialMonth);\n}\n"]},"metadata":{},"sourceType":"module"}