{"ast":null,"code":"import React from 'react';\nimport { differenceInCalendarDays, isAfter, isBefore } from 'date-fns';\nimport { isDayPickerRange } from '../../types/DayPickerRange';\nimport { addToRange } from './utils/addToRange';\n/**\n * The SelectRange context shares details about the selected days when in\n * range selection mode.\n *\n * Access this context from the [[useSelectRange]] hook.\n */\n\nexport var SelectRangeContext = React.createContext(undefined);\n/** Provides the values for the [[SelectRangeProvider]]. */\n\nexport function SelectRangeProvider(props) {\n  if (!isDayPickerRange(props.initialProps)) {\n    var emptyContextValue = {\n      selected: undefined,\n      modifiers: {\n        range_start: [],\n        range_end: [],\n        range_middle: [],\n        disabled: []\n      }\n    };\n    return React.createElement(SelectRangeContext.Provider, {\n      value: emptyContextValue\n    }, props.children);\n  }\n\n  return React.createElement(SelectRangeProviderInternal, {\n    initialProps: props.initialProps,\n    children: props.children\n  });\n}\nexport function SelectRangeProviderInternal(_a) {\n  var initialProps = _a.initialProps,\n      children = _a.children;\n  var selected = initialProps.selected;\n  var min = initialProps.min;\n  var max = initialProps.max;\n\n  var onDayClick = function (day, modifiers, e) {\n    var _a, _b;\n\n    (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, modifiers, e);\n    var newValue = addToRange(day, selected);\n\n    if ((min || max) && selected && (newValue === null || newValue === void 0 ? void 0 : newValue.to) && newValue.from && newValue.from !== newValue.to) {\n      var diff = Math.abs(differenceInCalendarDays(newValue === null || newValue === void 0 ? void 0 : newValue.to, newValue === null || newValue === void 0 ? void 0 : newValue.from));\n\n      if (min && diff < min) {\n        return;\n      }\n\n      if (max && diff >= max) {\n        return;\n      }\n    }\n\n    (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, newValue, day, modifiers, e);\n  };\n\n  var modifiers = {\n    range_start: [],\n    range_end: [],\n    range_middle: [],\n    disabled: []\n  };\n\n  if (selected) {\n    if (selected.from) {\n      modifiers.range_start = [selected.from];\n\n      if (selected.to) {\n        modifiers.range_middle = [{\n          after: selected.from,\n          before: selected.to\n        }];\n\n        if (max || min) {\n          modifiers.disabled = [function (date) {\n            if (max && selected.to && selected.from && isBefore(date, selected.from)) {\n              var diff = differenceInCalendarDays(selected.to, date);\n\n              if (diff >= max) {\n                return true;\n              }\n            }\n\n            if (max && selected.to && selected.from && isAfter(date, selected.to)) {\n              var diff = differenceInCalendarDays(date, selected.from);\n\n              if (diff >= max) {\n                return true;\n              }\n            }\n\n            if (min && selected.from && isBefore(date, selected.from)) {\n              var diff = differenceInCalendarDays(selected.from, date);\n\n              if (diff < min) {\n                return true;\n              }\n            }\n\n            if (min && selected.to && selected.from && isAfter(date, selected.to)) {\n              var diff = differenceInCalendarDays(date, selected.from);\n\n              if (diff < min) {\n                return true;\n              }\n            }\n\n            return false;\n          }];\n        }\n\n        modifiers.range_end = [selected.to];\n      } else {\n        modifiers.range_end = [selected.from];\n      }\n    }\n  }\n\n  return React.createElement(SelectRangeContext.Provider, {\n    value: {\n      selected: selected,\n      onDayClick: onDayClick,\n      modifiers: modifiers\n    }\n  }, children);\n}","map":{"version":3,"sources":["../../../src/contexts/SelectRange/SelectRangeContext.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { differenceInCalendarDays, isAfter, isBefore } from 'date-fns';\nimport { isDayPickerRange } from '../../types/DayPickerRange';\nimport { addToRange } from './utils/addToRange';\n/**\n * The SelectRange context shares details about the selected days when in\n * range selection mode.\n *\n * Access this context from the [[useSelectRange]] hook.\n */\nexport var SelectRangeContext = React.createContext(undefined);\n/** Provides the values for the [[SelectRangeProvider]]. */\nexport function SelectRangeProvider(props) {\n    if (!isDayPickerRange(props.initialProps)) {\n        var emptyContextValue = {\n            selected: undefined,\n            modifiers: {\n                range_start: [],\n                range_end: [],\n                range_middle: [],\n                disabled: []\n            }\n        };\n        return (React.createElement(SelectRangeContext.Provider, { value: emptyContextValue }, props.children));\n    }\n    return (React.createElement(SelectRangeProviderInternal, { initialProps: props.initialProps, children: props.children }));\n}\nexport function SelectRangeProviderInternal(_a) {\n    var initialProps = _a.initialProps, children = _a.children;\n    var selected = initialProps.selected;\n    var min = initialProps.min;\n    var max = initialProps.max;\n    var onDayClick = function (day, modifiers, e) {\n        var _a, _b;\n        (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, modifiers, e);\n        var newValue = addToRange(day, selected);\n        if ((min || max) &&\n            selected &&\n            (newValue === null || newValue === void 0 ? void 0 : newValue.to) &&\n            newValue.from &&\n            newValue.from !== newValue.to) {\n            var diff = Math.abs(differenceInCalendarDays(newValue === null || newValue === void 0 ? void 0 : newValue.to, newValue === null || newValue === void 0 ? void 0 : newValue.from));\n            if (min && diff < min) {\n                return;\n            }\n            if (max && diff >= max) {\n                return;\n            }\n        }\n        (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, newValue, day, modifiers, e);\n    };\n    var modifiers = {\n        range_start: [],\n        range_end: [],\n        range_middle: [],\n        disabled: []\n    };\n    if (selected) {\n        if (selected.from) {\n            modifiers.range_start = [selected.from];\n            if (selected.to) {\n                modifiers.range_middle = [\n                    {\n                        after: selected.from,\n                        before: selected.to\n                    }\n                ];\n                if (max || min) {\n                    modifiers.disabled = [\n                        function (date) {\n                            if (max &&\n                                selected.to &&\n                                selected.from &&\n                                isBefore(date, selected.from)) {\n                                var diff = differenceInCalendarDays(selected.to, date);\n                                if (diff >= max) {\n                                    return true;\n                                }\n                            }\n                            if (max &&\n                                selected.to &&\n                                selected.from &&\n                                isAfter(date, selected.to)) {\n                                var diff = differenceInCalendarDays(date, selected.from);\n                                if (diff >= max) {\n                                    return true;\n                                }\n                            }\n                            if (min && selected.from && isBefore(date, selected.from)) {\n                                var diff = differenceInCalendarDays(selected.from, date);\n                                if (diff < min) {\n                                    return true;\n                                }\n                            }\n                            if (min &&\n                                selected.to &&\n                                selected.from &&\n                                isAfter(date, selected.to)) {\n                                var diff = differenceInCalendarDays(date, selected.from);\n                                if (diff < min) {\n                                    return true;\n                                }\n                            }\n                            return false;\n                        }\n                    ];\n                }\n                modifiers.range_end = [selected.to];\n            }\n            else {\n                modifiers.range_end = [selected.from];\n            }\n        }\n    }\n    return (React.createElement(SelectRangeContext.Provider, { value: { selected: selected, onDayClick: onDayClick, modifiers: modifiers } }, children));\n}\n"]},"metadata":{},"sourceType":"module"}