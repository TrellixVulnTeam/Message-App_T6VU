{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React from 'react';\nimport { Button } from '../Button';\nimport { useDay } from './hooks/useDay';\n/**\n * The content of a day cell – as a button or span element according to its\n * modifiers.\n */\n\nexport function Day(props) {\n  var buttonRef = React.useRef(null);\n  var day = useDay(props.date, props.displayMonth, buttonRef);\n  var buttonProps = day.buttonProps,\n      nonInteractiveProps = day.nonInteractiveProps;\n\n  if (!buttonProps && !nonInteractiveProps) {\n    return React.createElement(React.Fragment, null);\n  }\n\n  if (nonInteractiveProps) {\n    return React.createElement(\"div\", __assign({}, nonInteractiveProps));\n  }\n\n  return React.createElement(Button, __assign({\n    ref: buttonRef\n  }, buttonProps));\n}","map":{"version":3,"sources":["../../../src/components/Day/Day.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,MAAT,QAAuB,gBAAvB;AAUA;;;AAGG;;AACH,OAAM,SAAU,GAAV,CAAc,KAAd,EAA6B;AACjC,MAAM,SAAS,GAAG,KAAK,CAAC,MAAN,CAAgC,IAAhC,CAAlB;AAEA,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,IAAP,EAAa,KAAK,CAAC,YAAnB,EAAiC,SAAjC,CAAlB;AACQ,MAAA,WAAW,GAA0B,GAAG,CAA7B,WAAX;AAAA,MAAa,mBAAmB,GAAK,GAAG,CAAR,mBAAhC;;AAER,MAAI,CAAC,WAAD,IAAgB,CAAC,mBAArB,EAA0C;AACxC,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,CAAP;AACD;;AACD,MAAI,mBAAJ,EAAyB;AACvB,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAS,mBAAT,CAAA,CAAP;AACD;;AACD,SAAO,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,QAAA,CAAA;AAAC,IAAA,GAAG,EAAE;AAAN,GAAA,EAAqB,WAArB,CAAP,CAAP;AACD","sourcesContent":["import { __assign } from \"tslib\";\nimport React from 'react';\nimport { Button } from '../Button';\nimport { useDay } from './hooks/useDay';\n/**\n * The content of a day cell – as a button or span element according to its\n * modifiers.\n */\nexport function Day(props) {\n    var buttonRef = React.useRef(null);\n    var day = useDay(props.date, props.displayMonth, buttonRef);\n    var buttonProps = day.buttonProps, nonInteractiveProps = day.nonInteractiveProps;\n    if (!buttonProps && !nonInteractiveProps) {\n        return React.createElement(React.Fragment, null);\n    }\n    if (nonInteractiveProps) {\n        return React.createElement(\"div\", __assign({}, nonInteractiveProps));\n    }\n    return React.createElement(Button, __assign({ ref: buttonRef }, buttonProps));\n}\n"]},"metadata":{},"sourceType":"module"}