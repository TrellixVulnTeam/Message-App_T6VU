{"ast":null,"code":"var _jsxFileName = \"/home/mark/workmine/Message-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"./firebase/firebase.utils\";\nimport Header from \"./pages/header/header.component\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport Login from \"./pages/login/login.component\";\nimport { setCurrentUser, listAllUser } from \"./redux/user/user.actions\";\nimport { createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { firestore } from \"./firebase/firebase.utils\";\nimport { setSelectedUser } from \"./redux/user/user.actions\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  console.log(\"ðŸš€ ~ file: App.js ~ line 15 ~ App ~ props\", props); // unsubscribeFromAuth = null;\n\n  useEffect(() => {\n    const {\n      setCurrentUser,\n      listAllUser,\n      setSelectedUser\n    } = props;\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          firestore.collection(\"users\").onSnapshot(querySnapshot => {\n            var users = [];\n            querySnapshot.forEach(doc => {\n              if (snapShot.id !== doc.id) users.push({\n                id: doc.id,\n                ...doc.data()\n              });\n            });\n            listAllUser(users);\n          });\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n    return () => {\n      unsubscribeFromAuth();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    user\n  } = _ref2;\n  return {\n    currentUser: user.currentUser,\n    selectedUser: user.selectedUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  listAllUser: allUser => dispatch(listAllUser(allUser)),\n  setSelectedUser: user => dispatch(setSelectedUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mark/workmine/Message-App/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","auth","Header","HomePage","Login","setCurrentUser","listAllUser","createUserProfileDocument","firestore","setSelectedUser","App","props","console","log","unsubscribeFromAuth","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","collection","querySnapshot","users","forEach","doc","id","push","data","currentUser","mapStateToProps","user","selectedUser","mapDispatchToProps","dispatch","allUser"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"./firebase/firebase.utils\";\nimport Header from \"./pages/header/header.component\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport Login from \"./pages/login/login.component\";\nimport { setCurrentUser, listAllUser } from \"./redux/user/user.actions\";\nimport { createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { firestore } from \"./firebase/firebase.utils\";\nimport { setSelectedUser } from \"./redux/user/user.actions\";\nimport \"./App.css\";\n\nconst App = ({ props }) => {\n  console.log(\"ðŸš€ ~ file: App.js ~ line 15 ~ App ~ props\", props);\n  // unsubscribeFromAuth = null;\n  useEffect(() => {\n    const { setCurrentUser, listAllUser, setSelectedUser } = props;\n\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot((snapShot) => {\n          firestore.collection(\"users\").onSnapshot((querySnapshot) => {\n            var users = [];\n            querySnapshot.forEach((doc) => {\n              if (snapShot.id !== doc.id)\n                users.push({ id: doc.id, ...doc.data() });\n            });\n            listAllUser(users);\n          });\n\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      }\n      setCurrentUser(userAuth);\n    });\n    return () => {\n      unsubscribeFromAuth();\n    };\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header></Header>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() =>\n            this.props.currentUser ? <HomePage /> : <Redirect to=\"/login\" />\n          }\n        />\n        <Route exact path=\"/login\" component={Login} />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser,\n  selectedUser: user.selectedUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  listAllUser: (allUser) => dispatch(listAllUser(allUser)),\n  setSelectedUser: (user) => dispatch(setSelectedUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}