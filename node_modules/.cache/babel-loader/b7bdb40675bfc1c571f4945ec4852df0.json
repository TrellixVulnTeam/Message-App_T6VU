{"ast":null,"code":"import { startOfDay, startOfMonth } from 'date-fns';\n/**\n * Build the `fromDate` and `toDate` values, given the fromMonth/toMonth\n * or fromYear/toYear props.\n */\n\nexport function parseFromToProps(props) {\n  var fromYear = props.fromYear,\n      toYear = props.toYear,\n      fromMonth = props.fromMonth,\n      toMonth = props.toMonth;\n  var fromDate = props.fromDate,\n      toDate = props.toDate;\n\n  if (fromMonth) {\n    fromDate = startOfMonth(fromMonth);\n  } else if (fromYear) {\n    fromDate = new Date(fromYear, 0, 1);\n  }\n\n  if (toMonth) {\n    toDate = startOfMonth(toMonth);\n  } else if (toYear) {\n    toDate = new Date(toYear, 11, 31);\n  }\n\n  return {\n    fromDate: fromDate ? startOfDay(fromDate) : undefined,\n    toDate: toDate ? startOfDay(toDate) : undefined\n  };\n}","map":{"version":3,"sources":["../../../../src/contexts/DayPicker/utils/parseFromToProps.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,EAAqB,YAArB,QAAyC,UAAzC;AAIA;;;AAGG;;AACH,OAAM,SAAU,gBAAV,CACJ,KADI,EAIH;AAEO,MAAA,QAAQ,GAAiC,KAAK,CAAtC,QAAR;AAAA,MAAU,MAAM,GAAyB,KAAK,CAA9B,MAAhB;AAAA,MAAkB,SAAS,GAAc,KAAK,CAAnB,SAA3B;AAAA,MAA6B,OAAO,GAAK,KAAK,CAAV,OAApC;AACF,MAAA,QAAQ,GAAa,KAAK,CAAlB,QAAR;AAAA,MAAU,MAAM,GAAK,KAAK,CAAV,MAAhB;;AAEN,MAAI,SAAJ,EAAe;AACb,IAAA,QAAQ,GAAG,YAAY,CAAC,SAAD,CAAvB;AACD,GAFD,MAEO,IAAI,QAAJ,EAAc;AACnB,IAAA,QAAQ,GAAG,IAAI,IAAJ,CAAS,QAAT,EAAmB,CAAnB,EAAsB,CAAtB,CAAX;AACD;;AACD,MAAI,OAAJ,EAAa;AACX,IAAA,MAAM,GAAG,YAAY,CAAC,OAAD,CAArB;AACD,GAFD,MAEO,IAAI,MAAJ,EAAY;AACjB,IAAA,MAAM,GAAG,IAAI,IAAJ,CAAS,MAAT,EAAiB,EAAjB,EAAqB,EAArB,CAAT;AACD;;AAED,SAAO;AACL,IAAA,QAAQ,EAAE,QAAQ,GAAG,UAAU,CAAC,QAAD,CAAb,GAA0B,SADvC;AAEL,IAAA,MAAM,EAAE,MAAM,GAAG,UAAU,CAAC,MAAD,CAAb,GAAwB;AAFjC,GAAP;AAID","sourcesContent":["import { startOfDay, startOfMonth } from 'date-fns';\n/**\n * Build the `fromDate` and `toDate` values, given the fromMonth/toMonth\n * or fromYear/toYear props.\n */\nexport function parseFromToProps(props) {\n    var fromYear = props.fromYear, toYear = props.toYear, fromMonth = props.fromMonth, toMonth = props.toMonth;\n    var fromDate = props.fromDate, toDate = props.toDate;\n    if (fromMonth) {\n        fromDate = startOfMonth(fromMonth);\n    }\n    else if (fromYear) {\n        fromDate = new Date(fromYear, 0, 1);\n    }\n    if (toMonth) {\n        toDate = startOfMonth(toMonth);\n    }\n    else if (toYear) {\n        toDate = new Date(toYear, 11, 31);\n    }\n    return {\n        fromDate: fromDate ? startOfDay(fromDate) : undefined,\n        toDate: toDate ? startOfDay(toDate) : undefined\n    };\n}\n"]},"metadata":{},"sourceType":"module"}