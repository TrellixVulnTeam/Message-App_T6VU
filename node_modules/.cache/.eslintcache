[{"/home/mark/workmine/Message-App/src/index.js":"1","/home/mark/workmine/Message-App/src/App.js":"2","/home/mark/workmine/Message-App/src/pages/homepage/homepage.component.jsx":"3","/home/mark/workmine/Message-App/src/pages/login/login.component.jsx":"4","/home/mark/workmine/Message-App/src/firebase/firebase.utils.js":"5","/home/mark/workmine/Message-App/src/pages/header/header.component.jsx":"6","/home/mark/workmine/Message-App/src/redux/user/user.actions.js":"7","/home/mark/workmine/Message-App/src/redux/user/user.types.js":"8","/home/mark/workmine/Message-App/src/redux/store.js":"9","/home/mark/workmine/Message-App/src/redux/root-reducer.js":"10","/home/mark/workmine/Message-App/src/redux/user/user.reducer.js":"11","/home/mark/workmine/Message-App/src/components/button/button.jsx":"12","/home/mark/workmine/Message-App/src/components/sign-in/sign-in.component.jsx":"13","/home/mark/workmine/Message-App/src/components/sign-up/sign-up.component.jsx":"14","/home/mark/workmine/Message-App/src/components/online-list/online-list.component.jsx":"15","/home/mark/workmine/Message-App/src/components/chatting-content/chatting-content.jsx":"16","/home/mark/workmine/Message-App/src/components/user-items/user-item.component.jsx":"17","/home/mark/workmine/Message-App/src/components/avatar/avatar.component.jsx":"18","/home/mark/workmine/Message-App/src/redux/messages/messages.reducer.js":"19","/home/mark/workmine/Message-App/src/redux/messages/messages.type.js":"20","/home/mark/workmine/Message-App/src/redux/messages/messages.action.js":"21","/home/mark/workmine/Message-App/src/components/message/message.coponent.jsx":"22","/home/mark/workmine/Message-App/src/components/avatar-name/avatar-name.component.jsx":"23"},{"size":483,"mtime":1640533167010,"results":"24","hashOfConfig":"25"},{"size":2481,"mtime":1640534575975,"results":"26","hashOfConfig":"25"},{"size":435,"mtime":1640453829654,"results":"27","hashOfConfig":"25"},{"size":843,"mtime":1640534242442,"results":"28","hashOfConfig":"25"},{"size":1505,"mtime":1640542948583,"results":"29","hashOfConfig":"25"},{"size":1206,"mtime":1640453845873,"results":"30","hashOfConfig":"25"},{"size":372,"mtime":1640417991834,"results":"31","hashOfConfig":"25"},{"size":154,"mtime":1640417845314,"results":"32","hashOfConfig":"25"},{"size":260,"mtime":1640533181210,"results":"33","hashOfConfig":"25"},{"size":233,"mtime":1640533137335,"results":"34","hashOfConfig":"25"},{"size":652,"mtime":1640417942233,"results":"35","hashOfConfig":"25"},{"size":251,"mtime":1640539428805,"results":"36","hashOfConfig":"25"},{"size":2490,"mtime":1640466532333,"results":"37","hashOfConfig":"25"},{"size":4656,"mtime":1640545604054,"results":"38","hashOfConfig":"25"},{"size":1148,"mtime":1640537211887,"results":"39","hashOfConfig":"25"},{"size":2769,"mtime":1640542652874,"results":"40","hashOfConfig":"25"},{"size":1904,"mtime":1640527424650,"results":"41","hashOfConfig":"25"},{"size":471,"mtime":1640542893998,"results":"42","hashOfConfig":"25"},{"size":388,"mtime":1640449421313,"results":"43","hashOfConfig":"25"},{"size":106,"mtime":1640449487991,"results":"44","hashOfConfig":"25"},{"size":182,"mtime":1640450240255,"results":"45","hashOfConfig":"25"},{"size":521,"mtime":1640527509924,"results":"46","hashOfConfig":"25"},{"size":320,"mtime":1640542660273,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"w0ufrm",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mark/workmine/Message-App/src/index.js",[],["101","102"],"/home/mark/workmine/Message-App/src/App.js",["103"],"import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { auth } from \"./firebase/firebase.utils\";\n\nimport Header from \"./pages/header/header.component\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport Login from \"./pages/login/login.component\";\nimport { setCurrentUser, listAllUser } from \"./redux/user/user.actions\";\n\nimport { createUserProfileDocument } from \"./firebase/firebase.utils\";\n\nimport { firestore } from \"./firebase/firebase.utils\";\nimport { setSelectedUser } from \"./redux/user/user.actions\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser, listAllUser, setSelectedUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot((snapShot) => {\n          firestore.collection(\"users\").onSnapshot((querySnapshot) => {\n            var users = [];\n            querySnapshot.forEach((doc) => {\n              if (snapShot.id !== doc.id)\n                users.push({ id: doc.id, ...doc.data() });\n            });\n            // arr.sort((a, b) => statusOrder.indexOf(a.status) - statusOrder.indexOf(b.status));\n\n            listAllUser(users);\n            // setSelectedUser(users[0]);\n          });\n\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      }\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header></Header>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() =>\n              this.props.currentUser ? <HomePage /> : <Redirect to=\"/login\" />\n            }\n          />\n          <Route exact path=\"/login\" component={Login} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser,\n  selectedUser: user.selectedUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  listAllUser: (allUser) => dispatch(listAllUser(allUser)),\n  setSelectedUser: (user) => dispatch(setSelectedUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/mark/workmine/Message-App/src/pages/homepage/homepage.component.jsx",[],"/home/mark/workmine/Message-App/src/pages/login/login.component.jsx",["104"],"import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport \"./login.styles.scss\";\n\nimport loginImage from \"../../assets/bg2.jpg\"; // Tell Webpack this JS file uses this image\n\n// import SignIn from \"../../components/sign-in/sign-in.component\";\nimport SignUp from \"../../components/sign-up/sign-up.component\";\n\nconst Login = ({ currentUser }) => {\n  if (currentUser) {\n    return <Redirect to={`/`} />;\n  }\n\n  return (\n    <div className=\"login\">\n      <div>\n        <h2 className=\"login-header\">Once you try it, you can't leave</h2>\n        <img className=\"login-image\" src={loginImage} alt=\"\" />\n      </div>\n      <SignUp />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ user: { currentUser } }) => ({\n  currentUser,\n});\n\nexport default connect(mapStateToProps)(Login);\n","/home/mark/workmine/Message-App/src/firebase/firebase.utils.js",[],"/home/mark/workmine/Message-App/src/pages/header/header.component.jsx",["105"],"import react from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as Logo } from \"../../assets/logo.svg\";\n\nimport { auth } from \"../../firebase/firebase.utils\";\n\nimport Button from \"../../components/button/button\";\n\nimport SignIn from \"../../components/sign-in/sign-in.component\";\n\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport \"./header.styles.scss\";\n\nconst Header = ({ currentUser }) => (\n  <div className=\"header\">\n    <Link className=\"logo-container\" to=\"/\">\n      <Logo className=\"logo\" />\n    </Link>\n    <div className=\"options\">\n      <div>\n        {currentUser ? (\n          <Button\n            action={async () => {\n              const userRef = firestore.doc(`users/${currentUser.id}`);\n              await userRef.update({\n                isOnline: false,\n              });\n\n              auth.signOut();\n            }}\n            size=\"small\"\n          >\n            Sign Out\n          </Button>\n        ) : (\n          <SignIn />\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nconst mapStateToProps = ({ user: { currentUser } }) => ({\n  currentUser,\n});\n\nexport default connect(mapStateToProps)(Header);\n","/home/mark/workmine/Message-App/src/redux/user/user.actions.js",[],"/home/mark/workmine/Message-App/src/redux/user/user.types.js",[],"/home/mark/workmine/Message-App/src/redux/store.js",[],"/home/mark/workmine/Message-App/src/redux/root-reducer.js",[],"/home/mark/workmine/Message-App/src/redux/user/user.reducer.js",[],"/home/mark/workmine/Message-App/src/components/button/button.jsx",[],"/home/mark/workmine/Message-App/src/components/sign-in/sign-in.component.jsx",["106","107"],"import React, { useState } from \"react\";\n\nimport Button from \"../../components/button/button\";\n\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { withRouter } from \"react-router\";\n\nimport firebase from \"@firebase/app-compat\";\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = ({ history }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // firebase\n    //   .auth()\n    //   .signInWithEmailAndPassword(email, password)\n    //   .then((userCredential) => {\n    //     const userRef = firestore.doc(`users/${userCredential.user.uid}`);\n    //     userRef\n    //       .update({\n    //         isOnline: true,\n    //       })\n    //       .then(() => {\n    //         console.log(\"Document successfully updated!\");\n    //         history.push(\"/\");\n    //       });\n    //   })\n    //   .catch((error) => {\n    //     var errorCode = error.code;\n    //     var errorMessage = error.message;\n    //   });\n\n    try {\n      const userAuth = await auth.signInWithEmailAndPassword(email, password);\n      const userRef = firestore.doc(`users/${userAuth.user.uid}`);\n      await userRef.update({\n        isOnline: true,\n      });\n      setUserCredentials({ email: \"\", password: \"\" });\n\n      history.push(\"/\");\n    } catch (error) {\n      console.log(\"sign in error\");\n    }\n  };\n\n  return (\n    <form className=\"sign-in-form\" onSubmit={handleSubmit} autoComplete=\"off\">\n      <div>\n        <input\n          className=\"sign-in-input\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          placeholder=\"Email\"\n          required\n          autoComplete=\"off\"\n        />\n      </div>\n\n      <div>\n        <input\n          className=\"sign-in-input\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          placeholder=\"Password\"\n          required\n        />\n      </div>\n\n      <Button type=\"submit\" size=\"small\">\n        SIGN IN\n      </Button>\n    </form>\n  );\n};\n\nexport default withRouter(SignIn);\n","/home/mark/workmine/Message-App/src/components/sign-up/sign-up.component.jsx",["108"],"/home/mark/workmine/Message-App/src/components/online-list/online-list.component.jsx",["109"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./online-list.scss\";\nimport UserItem from \"../user-items/user-item.component\";\nconst OnlineList = ({ currentUser, allUsers }) => {\n  return (\n    <div className=\"main-chatlist\">\n      <div className=\"chatlist-heading\">\n        <div className=\"profile-card\">\n          <div className=\"profile-image\">\n            <img src={currentUser.avatarSrc} />\n          </div>\n          <h4>{currentUser ? currentUser.displayName : null}</h4>\n        </div>\n      </div>\n      <div className=\"chatList-search\">\n        <div className=\"search-wrap\">\n          <input type=\"text\" placeholder=\"Search Here\" required />\n          <button className=\"search-btn\">\n            <i className=\"fa fa-search\"></i>\n          </button>\n        </div>\n      </div>\n      <div className=\"chatlist-items\">\n        {allUsers.map((user, index) => (\n          <UserItem user={user} key={index} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ user: { currentUser }, user: { allUsers } }) => ({\n  currentUser,\n  allUsers,\n});\n\nexport default connect(mapStateToProps)(OnlineList);\n","/home/mark/workmine/Message-App/src/components/chatting-content/chatting-content.jsx",[],"/home/mark/workmine/Message-App/src/components/user-items/user-item.component.jsx",["110"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AvatarName from \"../avatar-name/avatar-name.component\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { setSelectedUser } from \"../../redux/user/user.actions\";\nimport { setMessageChatted } from \"../../redux/messages/messages.action\";\n\nimport \"./user-item.styles.scss\";\n\nconst UserItem = ({\n  user,\n  setSelectedUser,\n  currentUser,\n  setMessageChatted,\n}) => {\n  const { displayName, isOnline, avatarSrc } = user;\n\n  const onSelectedUser = () => {\n    setSelectedUser(user);\n    // if (!currentUser || !user) return;\n    firestore\n      .collection(\"messages\")\n      // .where(currentUser.id, \"in\", [\"user1\", \"user2\"])\n      .orderBy(\"createdAt\")\n      .onSnapshot((querySnapshot) => {\n        var allMessages = [];\n        querySnapshot.forEach((doc) => {\n          if (\n            (doc.data().user1 === currentUser.id &&\n              doc.data().user2 === user.id) ||\n            (doc.data().user1 === user.id &&\n              doc.data().user2 === currentUser.id)\n          ) {\n            allMessages.push(doc.data());\n          }\n        });\n\n        setMessageChatted(allMessages);\n      });\n  };\n\n  return (\n    <div\n      onClick={onSelectedUser}\n      className={`chatlist__item ${isOnline ? isOnline : \"\"} `}\n    >\n      <div className=\"user-status\">\n        <span className={`${isOnline ? \"active\" : \"off\"} active-status`}></span>\n        <AvatarName avatarSrc={avatarSrc} displayName={displayName} />\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelectedUser: (user) => dispatch(setSelectedUser(user)),\n  setMessageChatted: (messageChatted) =>\n    dispatch(setMessageChatted(messageChatted)),\n});\n\nconst mapStateToProps = ({ user: { currentUser } }) => ({\n  currentUser,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserItem);\n","/home/mark/workmine/Message-App/src/components/avatar/avatar.component.jsx",["111"],"/home/mark/workmine/Message-App/src/redux/messages/messages.reducer.js",[],"/home/mark/workmine/Message-App/src/redux/messages/messages.type.js",[],"/home/mark/workmine/Message-App/src/redux/messages/messages.action.js",[],"/home/mark/workmine/Message-App/src/components/message/message.coponent.jsx",[],"/home/mark/workmine/Message-App/src/components/avatar-name/avatar-name.component.jsx",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":23,"column":42,"nodeType":"118","messageId":"119","endLine":23,"endColumn":57},{"ruleId":"116","severity":1,"message":"120","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"121","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"122","line":5,"column":16,"nodeType":"118","messageId":"119","endLine":5,"endColumn":41},{"ruleId":"116","severity":1,"message":"123","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":16},{"ruleId":"116","severity":1,"message":"123","line":15,"column":8,"nodeType":"118","messageId":"119","endLine":15,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":11,"column":13,"nodeType":"126","endLine":11,"endColumn":48},{"ruleId":"116","severity":1,"message":"127","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"127","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'setSelectedUser' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'react' is defined but never used.","'createUserProfileDocument' is defined but never used.","'firebase' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]